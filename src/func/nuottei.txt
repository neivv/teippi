004477C0 = void MedicRemove(), edx Unit *

004EBED0 = void ProgressOrder_Hidden(), eax Unit *
004EC120 = void ProgressSecondaryOrder_Hidden(), eax Unit *
0046C480 = void ProgressUnitMovement(), eax Unit *
004F42C0 = void ProgressAcidSporeTimers(), eax Unit *
004EB4B0 = void ProgressEnergyRegen(), esi Unit *
004EB660 = void ProgressSubunitDirection(), esi Unit *, arg 1 int

00476430 = bool IsOutOfRange(), eax const Unit *, arg 1 const Unit *
00442460 = bool HasTargetInRange(), edx Unit *

00476FC0 = void AttackUnit(), edi Unit *, eax Unit *, arg 1 int, arg 2 int
0043FFD0 = Ai_StimIfNeeded(), arg 1 Unit *unit
00476640 = bool IsReadyToAttack(), eax Unit *unit, arg 1 weapon

004A09D0 = Unit *CreateUnit(), ecx int, eax x32, arg 1 y32, arg 2 int
004A01F0 = void FinishUnit_Pre(), eax Unit *
0049FA40 = void FinishUnit(), eax Unit *
0049FED0 = void TransformUnit(), eax Unit *, arg 1 int
00467250 = int PrepareBuildUnit(), edi Unit *, arg 1 int
0049EFA0 = int GiveUnit(), ecx Unit *, arg 1 int, arg 2 int

00467340 = void SetHp(), eax Unit *, ecx int
004765B0 = int GetMissChance(), ecx const Unit *attacker, eax const Unit *target
00476210 = int GetBaseMissChance(), eax const Unit *
00431730 = int GetCurrentStrength(), ecx const Unit *, eax int
0047B770 = bool IsMultiSelectable(), ecx Unit *

0046E1C0 = int CheckUnitDatRequirements(), esi Unit *, eax int, arg 1 int
0049A350 = bool IsHigherRank(), edi Unit *, esi Unit *
004764D0 = bool IsTooClose(), eax Unit *, esi Unit *
004936B0 = bool IsPowered(), eax int, arg 1 x32, arg 2 y32, arg 3 int

0048F910 = void PlaySelectionSound(), arg 1 Unit *
0049A500 = void GetFormationMovementTarget(), arg 1 Unit *, arg 2 MovementGroup *

00455A00 = int ShowRClickErrorIfNeeded(), arg 1 Unit *
00491480 = int NeedsMoreEnergy(), arg 1 Unit *, arg 2 int

004EBAE0 = void MoveUnit(), edx Unit *, eax x32, ecx y32
0046AD90 = void MoveUnit_Partial(), eax Unit *
004E6340 = void HideUnit(), eax Unit *
00493CA0 = HideUnit_Partial(), edi Unit *unit, arg 1 unk
004E6490 = void ShowUnit(), edi Unit *
00492CC0 = void DisableUnit(), eax Unit *
004F4480 = void AcidSporeUnit(), ebx Unit *

00494160 = void FinishMoveUnit(), eax Unit *

0048F4D0 = void PlayYesSoundAnim(), eax Unit *
004E76C0 = bool GetUnloadPosition(), arg 1 word *, eax Unit *, esi Unit *
00488BF0 = void ModifyUnitCounters(), eax Unit *, arg 1 int
00488D50 = void ModifyUnitCounters2(), edi Unit *, ecx int, arg 1 int
00460860 = void AddToCompletedUnitLbScore(), ecx Unit *

0048DBD0 = bool CanPlaceBuilding(), ecx Unit *, eax int, edx int
00469EC0 = void ClearBuildingTileFlag(), eax Unit *, arg 1 x32, arg 2 y32

0049EB70 = void RemoveReferences(), edi Unit *, arg 1 int
004EB290 = void StopMoving(), eax Unit *
0046A560 = void RemoveFromMap(), eax Unit *
004A0990 = void SubunitDeath(), ecx Unit *
004F3B70 = void DropPowerup(), arg 1 Unit *

004EBE10 = void UpdateVisibility(), esi Unit *
00443390 = void UpdateDetectionStatus(), eax Unit *
004916E0 = void RemoveFromCloakedUnits(), ecx Unit *
0049B5B0 = void BeginInvisibility(), eax Unit *, ecx int
0049B440 = void EndInvisibility(), eax Unit *, ebx int

004E97C0 = void Unburrow(), eax Unit *
0045D410 = void CancelBuildingMorph(), eax Unit *
0042CEC0 = RefundFullCost(), ecx unit_id, eax player
0042CE70 = void RefundFourthOfCost(), ecx player, eax unit_id
00463900 = void Order_MedicIdle(), eax Unit *
004F3900 = void DeletePowerupImages(), eax Unit *
0042DA90 = bool IsPointAtUnitBorder(), arg 1 Unit *, edx Unit *, arg 2 dword

00485BD0 = void SendCommand(), ecx const void *, edx int
0049A850 = Unit *NextCommandedUnit()

004D1140 = bool IsOutsideGameScreen(), ecx int, eax int
0041C400 = void MarkControlDirty(), eax Control *

0041D3A0 = void CopyToFrameBuffer(), esi Rect32 *
0042D280 = void MarkAreaForRedraw(), esi Rect32 *

0042DF70 = bool HasToDodge(), edx Unit *, eax Unit *
00421910 = void InsertContour(), edx Contour *, arg 1 PathingData *, arg 2 Contour **, arg 3 Contour **
0049A8C0 = void PrepareFormationMovement(), edi MovementGroup *, arg 1 int
00495300 = int GetFacingDirection(), edx x32, arg 1 y32, ecx x32, eax y32
004F1A20 = int GetOthersLocation(), arg 1 const Unit *, eax const Unit *
00431D00 = int GetEnemyAirStrength(), eax int, arg 1 int
004318E0 = int GetEnemyStrength(), eax int, arg 1 int, arg 2 int
0042FA00 = bool CanWalkHere(), eax Unit *, edx int, arg 1 int
00437E70 = bool AreConnected(), eax int, esi int, ebx int
0042FE00 = int MakePath(), eax Unit *, arg 1 dword
0046A940 = bool UpdateMovementState(), eax Unit *, arg 1 int
004F20D0 = Unit *FindCollidingUnit(), ebx Unit *
004F1980 = int TerrainCollision(), eax Unit *
0042DA00 = bool DoesBlockPoint(), edx const Unit *, arg 1 int, arg 2 int, arg 3 int

004C3450 = bool WriteCompressed(), arg 2 File *, eax const void *, arg 1 int
004C3280 = bool ReadCompressed(), arg 3 File *file, arg 1 void *out, arg 2 int len
0047DA80 = void SaveDisappearingCreepChunk(), edi File *
004BF390 = void SaveDatChunk(), esi File *
004899D0 = void SaveTriggerChunk(), arg 1 File *

004CE950 = void WriteReadableSaveHeader(), ebx File *, arg 1 const char *
004CF160 = void WriteSaveHeader(), arg 2 File *, arg 1 dword
004CE370 = void ReplaceWithShortPath(), esi char *, edi int
004CE300 = void ReplaceWithFullPath(), edi char *, esi int
004C3DB0 = dword FirstCommandUser()
004F3F20 = bool IsInvalidFilename(), edx const char *, ecx int, eax int
004CF2A0 = bool GetUserFilePath(), arg 1 const char *, ecx char *, eax int, ebx int
004F5C50 = void ShowWaitDialog(), esi const char *
004F5930 = void HidePopupDialog()

00436A40 = void DeleteAiRegions()
00436A80 = void AllocateAiRegions(), eax int
0047D9D0 = bool LoadDisappearingCreepChunk(), esi File *
004897E0 = bool LoadTriggerChunk(), arg 1 File *
004BF020 = bool LoadDatChunk(), esi File *, arg 1 int
00494030 = void RestorePylons()

0048ED50 = void PlaySound(), ebx int, esi Unit *, arg 1 int, arg 2 int
0048EC10 = void PlaySoundAtPos(), ebx int, arg 1 dword, arg 2 int, arg 3 int

0048D1C0 = void PrintText(), arg 1 const char *, arg 2 int, eax int
0048EE30 = void ShowInfoMessage(), edi int, esi int, ebx int
0048EF30 = void ShowErrorMessage(), eax const char *, ecx int, edx Unit *
0048CCB0 = void PrintInfoMessage(), eax const char *

0040C360 = int Distance_(), ecx x32, arg 1 y32, edx x32, arg 2 y32
00401240 = bool IsPointInArea(), ecx const Unit *, arg 1 int, arg 2 x32, eax y32
00430F10 = bool IsInArea(), ecx const Unit *, arg 1 int, arg 2 const Unit *

00489CC0 = void ProgressTime(), edx int
00489450 = void ProgressTriggerList(), eax TriggerList *
00489130 = ProgressActions(), esi Trigger *trigger
0048A200 = void ApplyVictory()
00416000 = DeleteTimer(), esi Control *ctrl, edx timer_id
004C7380 = Unit *FindUnitInLocation(), arg 1 unit_id, arg 2 player, eax location
004A34C0 = PingMinimap(), arg 1 x, arg 2 y, arg 3 trigger_player_id
0045EDD0 = Trigger_Portrait(), arg 1 unit_id, esi msecs, edi x, arg 2 y
004BD0C0 = const char *GetChkString(), edx string_id
004C51D0 = dword GetTextDisplayTime(), eax const char *text
0048CF20 = Trigger_DisplayText(), esi const char *msg, arg 1 time_msecs

00475CE0 = bool CanHitUnit(), edx Unit *, arg 1 Unit *, eax int
0048B3B0 = void ProgressBulletFlight(), eax Bullet *
0048B250 = void ProgressBulletMovement(), eax Bullet *
00495240 = void ChangeMovePos(), eax void *, esi int, ecx int
004E6090 = void UpdateDamageOverlay(), esi Unit *
004806F0 = void ShowArea(), eax int, ecx int, arg 1 x32, arg 2 y32, arg 3 int

00495840 = void ChangeDirectionToMoveWaypoint(), esi void *
00495CB0 = void ProgressSpeed(), esi void *
00495080 = void UpdateIsMovingFlag(), eax void *
004956C0 = void ProgressMove(), esi void *
00495100 = void ChangedDirection(), eax void *
00495980 = void ProgressMoveWith(), ecx void *, eax int, edx int
00496030 = bool MoveFlingy(), arg 1 Flingy *

004983A0 = void PrepareDrawSprite(), eax Sprite *
00498C50 = void DrawSprite(), eax Sprite *
00402500 = byte GetAreaVisibility(), arg 1 int, arg 2 int, arg 3 int, edx int
00402570 = byte GetAreaExploration(), arg 1 int, arg 2 int, arg 3 int, edx int
00497480 = void SetVisibility(), ebx Sprite *, arg 1 int
004EBBD0 = void DrawTransmissionSelectionCircle(), esi Sprite *, arg 1 int
004A48E0 = void DrawOwnMinimapUnits(), eax int
004A3FD0 = void DrawMinimapDot(), ecx int, eax x32, arg 1 y32, arg 2 int, arg 3 int, arg 4 int
00497A10 = void MoveSprite(), ecx Sprite *, ebx int, edi int
00487FD0 = Unit *FindFowUnit(), ecx x32, eax y32, arg 1 int
00498EA0 = void AddOverlayHighest(), eax Sprite *, esi int, arg 1 int, arg 2 int, arg 3 int
00498D70 = AddOverlayBelowMain(), eax Sprite *sprite, esi image_id, arg 1 x_off, arg 2 y_off, arg 3 direction

004D57B0 = void PrepareDrawImage(), eax Image *
004970A0 = void MarkImageAreaForRedraw(), eax Image *
004D74C0 = void ProgressIscriptFrame(), ecx Image *, arg 1 Iscript::Script *, arg 2 int, arg 3 int
004D5EA0 = void SetImageDirection32(), eax Image *, arg 1 int
004D5F80 = void SetImageDirection256(), esi Image *, arg 1 int

0045F8D0 = int MatchesHeight(), eax Unit *, esi int
004BD0F0 = int GetTerrainHeight(), ecx int, eax int
0047DE40 = void UpdateCreepDisappearance(), arg 1 int, edx x32, ecx y32, eax int
00438E70 = bool Ai_AreOnConnectedRegions(), eax Unit *, arg 1 int, arg 2 int
0042D810 = bool DoesFitHere(), ebx int, eax x32, edi y32
0049D3E0 = bool GetFittingPosition(), eax Rect16 *, arg 1 Unit *, arg 2 word *, arg 3 word *, arg 4 int, arg 5 int
00401FA0 = int ClipPointInBoundsForUnit(), eax int, edx word *

0049C440 = void MoveScreen(), eax int, ecx int
0049A740 = void ClearSelection(), eax int
0049A110 = bool HasTeamSelection(), eax int
0049AF80 = bool AddToPlayerSelection(), edi int, ebx int, esi Unit *
0049AE40 = void UpdateSelectionOverlays(), eax Unit * const *, arg 1 int
004E65C0 = void MakeDashedSelectionCircle(), eax Unit *
00497590 = void RemoveDashedSelectionCircle(), eax Sprite *
0049A170 = int RemoveFromSelection(), eax Unit *, arg 1 int
0049A7F0 = void RemoveFromSelections(), edi Unit *
0049F7A0 = void RemoveFromClientSelection3(), eax Unit *

0046DD80 = int CanUseTech(), edi int, eax Unit *, arg 1 int
00492020 = int CanTargetSpell(), arg 1 Unit *, arg 2 x32, arg 3 y32, arg 4 int16_t *, edx int, edi Unit *, esi int
00491E80 = int CanTargetSpellOnUnit(), arg 1 int, eax Unit *, ebx int
004926D0 = int SpellOrder(), ebx Unit *, arg 1 int, arg 2 int, arg 3 word *, eax int

004F67B0 = void ApplyStasis(), edi Unit *, arg 1 int
004F45E0 = void ApplyEnsnare(), edi Unit *
004553F0 = void ApplyMaelstrom(), edi Unit *, arg 1 int
00454310 = void UpdateSpeed(), eax Unit *
004F62D0 = void EndStasis(), esi Unit *
00454D90 = void EndLockdown(), esi Unit *
00454D20 = void EndMaelstrom(), esi Unit *

004F6B90 = Unit *Hallucinate(), arg 1 player, ecx Unit *target
004F66D0 = int PlaceHallucination(), eax Unit *hallu

0046DC20 = int CanIssueOrder(), eax Unit *, ebx int, arg 1 int
00474D90 = bool CanTargetOrder(), ebx Unit *, esi Unit *, eax int, arg 1 int16_t *
004746D0 = bool CanTargetOrderOnFowUnit(), ebx Unit *, ecx int, edx int, edi int16_t *
004756E0 = void IssueOrderTargetingUnit(), esi Unit *, edx Unit *, arg 1 int queued, arg 2 int order
004752B0 = IssueOrderTargetingUnit2(), esi Unit *self, arg 1 order, eax Unit *target
00475310 = void IssueOrderTargetingNothing(), esi Unit *, ecx int
00475260 = void IssueOrderTargetingGround(), esi Unit *, arg 1 int, arg 2 x32, arg 3 y32
004756B0 = void IssueOrderTargetingGround2(), esi Unit *, edx int, arg 2 x32, arg 3 y32, ebx int, arg 1 int

00474810 = void AppendOrder(), edx Unit *, ecx int, arg 1 dword, arg 2 const Unit *, arg 3 int, eax int
00474D60 = void AppendOrderTargetingGround(), edx Unit *, ecx int, arg 1 dword
004745F0 = void AddOrder(), esi Unit *, ebx int, edi Order *, edx int, arg 1 dword, arg 2 const Unit *

00474C30 = void IssueOrder(), esi Unit *, arg 1 int, arg 2 dword, arg 3 const Unit *
00475420 = void DoNextQueuedOrderIfAble(), eax Unit *
00474B40 = void PrependOrderTargetingNothing(), ecx Unit *, eax int
00474A20 = PrependOrderTargetingGround(), arg 1 Unit *unit, eax order_id, edx x, ecx y
004752B0 = void IssueOrderTargetingUnit_Simple(), esi Unit *, arg 1 int order, eax const Unit *
00474760 = InsertOrderTargetingNothing(), esi Unit *self, ebx order, edi Order *insert_before
00474540 = void InsertOrder(), esi Unit *unit, ebx int order, arg 2 const Unit *target, arg 1 dword position_xy, edx int fow_unit, edi Order *insert_before

00476A50 = dword PrepareFlee(), arg 1 Unit *, eax const Unit *
0043E400 = bool Flee(), eax Unit *, arg 1 Unit *
004410C0 = Unit *FindNearestUnitOfId(), eax Unit *, arg 1 int
004390A0 = void ChangeAiRegionState(), esi Ai::Region *, ebx int
0043DB50 = bool Ai_ReturnToNearestBaseForced(), esi Unit *
0043C580 = void Ai_Detect(), eax Unit *, arg 1 Unit *
004A13C0 = bool Ai_CastReactionSpell(), eax Unit *, arg 1 int
00434330 = bool TryBeginDeleteTown(), esi Ai::Town *
004379B0 = Unit *FindNearestAvailableMilitary(), arg 1 int, arg 2 x32, ebx y32, ecx int
00448630 = void Ai_GuardRequest(), eax Ai::GuardAi *, ecx int
00476930 = bool Ai_ShouldKeepTarget(), ecx Unit *, eax Unit *
0043A390 = void Ai_RecalculateRegionStrength(), esi Ai::Region *
00447D00 = void Ai_PopSpendingRequestResourceNeeds(), ecx int, arg 1 int
004476D0 = void Ai_PopSpendingRequest(), eax int
004487B0 = bool Ai_DoesHaveResourcesForUnit(), arg 1 int, ecx int
004672F0 = bool Ai_TrainUnit(), eax Unit *, arg 1 int, arg 2 int, arg 3 void *
004A2830 = void InheritAi2(), ecx Unit *, eax Unit *

0043BC40 = Ai::UnitAi *Ai_FindNearestActiveMilitaryAi(), arg 1 Ai::Region *, arg 2 int, arg 3 int, arg 4 int, arg 5 Ai::Region *
0043BAC0 = Ai::UnitAi *Ai_FindNearestMilitaryOrSepContAi(), arg 1 Ai::Region *, arg 2 int, arg 3 int, arg 4 int, arg 5 int, arg 6 Ai::Region *

004E7420 = bool Ai_PrepareMovingTo(), arg 1 Unit *, arg 2 int, arg 3 int
0043D5D0 = void ProgressMilitaryAi(), arg 1 Unit *, arg 2 int, arg 3 int, arg 4 int
00436F70 = void Ai_UpdateSlowestUnitInRegion(), arg 1 Ai::Region *
0045B850 = void ProgressAiScript(), arg 1 Ai::Script *
00439D60 = void RemoveFromAiStructs(), arg 1 Unit *, arg 2 int
0043A010 = void Ai_UpdateRegionStateUnk(), arg 1 int, arg 2 Unit *
0043DF30 = void Ai_UnloadFailure(), arg 1 Unit *
0043ABB0 = bool Ai_AttackTo(), arg 1 int, arg 2 int, arg 3 int, arg 4 int, arg 5 int
00439500 = void Ai_EndAllMovingToAttack(), arg 1 int

004D9460 = void DrawFlashingSelectionCircles()
004DEED0 = void Replay_RefershUiIfNeeded()
004D9550 = bool ProgressTurns(), ecx dword *
00461640 = Victory()

0047DF90 = bool UpdateCreepDisappearance_Unit(), arg 1 Unit *
0047E410 = void TryUpdateCreepDisappear()
0049C4C0 = void ProgressCreepDisappearance()
00480880 = void UpdateFog()
004ED000 = void ProgressUnitFrames()
004E5F30 = void RevealSightArea(), arg 1 Unit *

0043FD80 = void Ai_ProgressRegions()
00445610 = void UpdateResourceAreas()
004A2A40 = void Ai_Unk_004A2A40()

0048A410 = void CheckVictoryState()

00499A60 = void AddSelectionOverlays()

00402380 = int IsCompletelyHidden(), ecx int, edx int, arg 1 int, arg 2 int
00402440 = int IsCompletelyUnExplored(), ecx int, edx int, arg 1 int, arg 2 int

00424A10 = int Ui_NeedsRedraw_Unk()
00424980 = int GenericStatus_DoesNeedRedraw()

004A4650 = void DrawNeutralMinimapUnits(), ecx int
004A47B0 = void DrawMinimapUnits(), ecx int
0045FEF0 = int IsOwnedByPlayer(), ecx int, edx int, arg 1 Unit *
00401170 = int CanControlUnit(), arg 1 Unit *
004967A0 = void AddToRecentSelections()

0048CA10 = void EndTargeting()
0048D9A0 = void MarkPlacementBoxAreaDirty()
0048E310 = void EndBuildingPlacement()

00498F40 = Image *AddOverlayNoIscript(), eax Sprite *, arg 1 int, arg 2 int, arg 3 int, arg 4 int

004843F0 = void SetCursorSprite(), arg 1 int
004975D0 = void RemoveSelectionCircle(), ecx Sprite *

0042E1D0 = int DoUnitsBlock(), arg 1 const Unit *, arg 2 dword
0048F230 = void Notify_UnitWasHit(), arg 1 Unit *

00410316 = int STransBind(), arg 1 void *
00411E1E = int STrans437(), arg 1 void *, arg 2 byte *, arg 3 int, arg 4 void **

0041DE20 = int ContainsDirtyArea(), arg 1 int, arg 2 int, arg 3 int, arg 4 int
0041D420 = void CopyGameScreenToFramebuf()

0049E530 = void ShowLastError(), arg 1 int

0047CDD0 = bool Command_Sync_Main(), edi const void *
004CF950 = void Command_Load(), ebx const void *
004BFB10 = void Command_Restart()
004C0BC0 = void Command_Pause()
004C0B00 = void Command_Resume()
004C23C0 = void Command_Build(), esi const void *
004BF7A0 = void Command_MinimapPing(), eax const void *
004BF9C0 = void Command_Vision(), eax const void *
004C28A0 = void Command_Ally(), arg 1 const void *
004C0AD0 = void Command_Cheat(), edx const void *
004C2870 = void Command_Hotkey(), ecx const void *
004C2EF0 = void Command_CancelBuild()
004C2EC0 = void Command_CancelMorph()
004C2190 = void Command_Stop(), edi const void *
004C1430 = void Command_CarrierStop()
004C1240 = void Command_ReaverStop()
004C1050 = void Command_Order_Nothing()
004C2040 = void Command_ReturnCargo(), edi const void *
004C1C20 = void Command_Train(), eax const void *
004C0100 = void Command_CancelTrain(), arg 1 const void *
004C1BA0 = void Command_Tech(), arg 1 const void *
004C0070 = void Command_CancelTech()
004C1B20 = void Command_Upgrade(), arg 1 const void *
004BFFC0 = void Command_CancelUpgrade()
004C1FA0 = void Command_Burrow(), arg 1 const void *
004C1AC0 = void Command_Unburrow()
004C0720 = void Command_Cloak()
004C0660 = void Command_Decloak()
004C1990 = void Command_UnitMorph(), arg 1 const void *
004C1910 = void Command_BuildingMorph(), eax const void *
004C1F10 = void Command_Unsiege(), arg 1 const void *
004C1E80 = void Command_Siege(), arg 1 const void *
004C0E90 = void Command_MergeArchon()
004C0CD0 = void Command_MergeDarkArchon()
004C20C0 = void Command_HoldPosition(), edi const void *
004BFCD0 = void Command_CancelNuke()
004C1620 = void Command_Lift(), arg 1 const void *
004C1800 = void Command_TrainFighter()
004BFF30 = void Command_CancelAddon()
004C2F30 = void Command_Stim()
00485E60 = void Command_Latency(), eax const void *
004C2E90 = void Command_LeaveGame(), arg 1 const void *
004C1CC0 = void Command_UnloadAll(), edi const void *
004DEB90 = void ChangeReplaySpeed(), eax int, ecx int, edx int
004CDE70 = void AddToReplayData(), eax ReplayData *, arg 1 int, ebx const void *, edi int

004258B0 = void SetLabel(), eax Control *, arg 1 const char *, ecx int

00402330 = void FreeTriggerList(), ebx TriggerList *
004C3D20 = void Storm_LeaveGame(), arg 1 dword
00419EA0 = void RemoveDialog(), esi Control *
00484CC0 = void ResetGameScreenEventHandlers()
004BBF50 = void DeleteDirectSound()
004A5F50 = void StopSounds()
0048FB40 = void InitOrDeleteRaceSounds(), arg 1 int
004BD190 = void FreeMapData()
004C3780 = void FreeGameDialogs()
00416D90 = void FreeEffectsSCodeUnk()
004D2FF0 = void WindowPosUpdate()
004C4790 = void ReportGameResult()
004D4AC0 = void ClearNetPlayerData()
004015F0 = void FreeUnkSound(), ebx void *
00488790 = void Unpause(), arg 1 int

004D5030 = void DeleteHealthBarImage(), esi Image *
004D4FA0 = void DeleteSelectionCircleImage(), esi Image *
00469F60 = void SetBuildingTileFlag(), eax Unit *, arg 1 int, arg 2 int
0042D9A0 = void CheckUnstack(), eax Unit *
00453300 = void IncrementAirUnitx14eValue(), esi Unit *

0046A740 = void ForceMoveTargetInBounds(), ecx Unit *
00453420 = bool ProgressRepulse(), eax Unit *
004535A0 = void FinishRepulse(), eax Unit *, arg 1 int
0046AD90 = void FinishUnitMovement(), eax Unit *

004F17C0 = bool IsInFrontOfMovement(), esi Unit *, ecx Unit *
0046A6B0 = void Iscript_StopMoving(), ecx Unit *
0046BF00 = void InstantStop(), eax Unit *
004951C0 = void SetSpeed_Iscript(), eax Unit *, edx int

004DDD30 = const char *GetGluAllString(), arg 1 int
004DE9D0 = void ReadStruct245(), edx GameData *, eax Player *
004BF5D0 = bool PreloadMap(), arg 1 const char *, arg 2 void *, arg 3 int
004CE280 = void AllocateReplayCommands()
004CE220 = bool LoadReplayCommands(), ebx File *

00442160 = int GetThreatLevel(), ebx const Unit *, edi const Unit *

0043FF00 = void Ai_FocusUnit(), eax Unit *
0043FF90 = void Ai_FocusUnit2(), eax Unit *

0047C210 = void Order_JunkYardDog(), eax Unit *
00463900 = void Order_Medic(), eax Unit *
004F6FA0 = void Order_Obscured(), eax Unit *
00492850 = void Order_Spell(), eax Unit *
0047BAB0 = void Order_WatchTarget(), eax Unit *
00465690 = void Order_ReaverAttack(), eax Unit *
004E80D0 = void Order_Unload(), eax Unit *
00476F50 = void Order_TowerGuard(), eax Unit *
00479150 = void Order_TowerAttack(), eax Unit *
004E96D0 = void Order_InitCreepGrowth(), eax Unit *
004E95E0 = void Order_StoppingCreepGrowth(), eax Unit *
0047BBA0 = void Order_Stop(), eax Unit *
0047C4F0 = void Order_StayInRange(), eax Unit *
00464E40 = void Order_Scan(), eax Unit *
00463D30 = void Order_ScannerSweep(), eax Unit *
004690C0 = void Order_ReturnResource(), eax Unit *
004A1EF0 = void Order_RescuePassive(), eax Unit *
004F6EF0 = void Order_RightClick(), eax Unit *
004E98E0 = void Order_MoveToInfest(), eax Unit *
004EA290 = void Order_InfestMine4(), eax Unit *
004E4F20 = void Order_BuildProtoss2(), eax Unit *
004F3E10 = void Order_PowerupIdle(), eax Unit *
00464FD0 = void Order_PlaceMine(), eax Unit *
004E7300 = void Order_TransportIdle(), eax Unit *
004780F0 = void Order_Patrol(), eax Unit *
00463610 = void Order_NukePaint(), eax Unit *
004E7B70 = void Order_Pickup4(), eax Unit *
00463AC0 = void Order_LiftingOff(), eax Unit *
00493F70 = void Order_InitPylon(), eax Unit *
0047C950 = void Order_Move(), eax Unit *
00469240 = void Order_MoveToMinerals(), eax Unit *
00468F60 = void Order_WaitForMinerals(), eax Unit *
00469000 = void Order_WaitForGas(), eax Unit *
00469980 = void Order_HarvestGas(), eax Unit *
00469500 = void Order_MoveToHarvest(), eax Unit *
0047C7B0 = void Order_Follow(), eax Unit *
0047BF80 = void Order_Trap(), eax Unit *
0047C0A0 = void Order_HideTrap(), eax Unit *
0047C1B0 = void Order_RevealTrap(), eax Unit *
00478EC0 = void Order_HarassMove(), eax Unit *
004F3EA0 = void Order_UnusedPowerup(), eax Unit *
004E7CF0 = void Order_EnterTransport(), eax Unit *
004EA3E0 = void Order_EnterNydus(), eax Unit *
0045CF80 = void Order_DroneStartBuild(), eax Unit *
004E9AA0 = void Order_DroneLand(), eax Unit *
0047BE80 = void Order_EnableDoodad(), eax Unit *
0047BD60 = void Order_DisableDoodad(), eax Unit *
0047BCD0 = void Order_OpenDoor(), eax Unit *
0047BC50 = void Order_CloseDoor(), eax Unit *
004E9E60 = void Order_Burrow(), eax Unit *
004E9860 = void Order_Burrowed(), eax Unit *
004EA670 = void Order_Unburrow(), eax Unit *
004E4210 = void Order_CtfCopInit(), eax Unit *
00478490 = void Order_ComputerReturn(), eax Unit *
00466720 = void Order_CarrierIgnore2(), eax Unit *
00465910 = void Order_CarrierStop(), eax Unit *
00465950 = void Order_CarrierAttack(), eax Unit *
004EA4C0 = void Order_BeingInfested(), eax Unit *
00493990 = void Order_RechargeShieldsBattery(), eax Unit *
00478DE0 = void Order_AiAttackMove(), eax Unit *
00477D00 = void Order_AttackFixedRange(), eax Unit *
004649B0 = void Order_LiftOff(), esi Unit *
00467760 = void Order_TerranBuildSelf(), eax Unit *
0045D500 = void Order_ZergBuildSelf(), eax Unit *
00467A70 = void Order_ConstructingBuilding(), eax Unit *
0047C3C0 = void Order_Critter(), eax Unit *
00468ED0 = void Order_StopHarvest(), eax Unit *
0045DEA0 = void Order_UnitMorph(), eax Unit *
004E6700 = void Order_NukeTrain(), eax Unit *
004E3FB0 = void Order_CtfCop2(), eax Unit *
00464AE0 = void Order_TankMode(), eax Unit *
00477980 = void Order_TurretAttack(), eax Unit *
004777F0 = void Order_TurretGuard(), eax Unit *
004671B0 = void Order_ResetCollision1(), eax Unit *
0042E320 = void Order_ResetCollision2(), eax Unit *
004546A0 = void Order_Upgrade(), eax Unit *
0045DD60 = void Order_Birth(), eax Unit *
00464180 = void Order_Heal(), eax Unit *
004548B0 = void Order_Tech(), eax Unit *
004673D0 = void Order_Repair(), eax Unit *

0045DC20 = void Order_BuildNydusExit(), ebx Unit *
00479480 = void Order_NukeTrack(), ebx Unit *
00464050 = void Order_MedicHoldPosition(), esi Unit *
00468E80 = void Order_Harvest3(), esi Unit *
00493A80 = void Order_InitArbiter(), esi Unit *
00493B10 = void Order_CompletingArchonSummon(), esi Unit *
00475B90 = void Order_Guard(), esi Unit *
004E41A0 = void Order_CtfCopStarted(), esi Unit *
00493DD0 = void Order_RechargeShieldsUnit(), edi Unit *
00493920 = void Order_Interrupted(), edi Unit *
00463740 = void Order_HealToIdle(), edi Unit *
004665D0 = void Order_Reaver(), edi Unit *
004A1C20 = void Order_Neutral(), edi Unit *
004E73B0 = void Order_PickupBunker(), edi Unit *
004E75D0 = void Order_PickupTransport(), edi Unit *
004666A0 = void Order_Carrier(), edi Unit *
004E4C70 = void Order_WarpIn(), edi Unit *
004E4D00 = void Order_BuildProtoss1(), edi Unit *
004A1D80 = void Order_AiPatrol(), esi Unit *
00479040 = void Order_AttackMove(), esi Unit *
00467FD0 = void Order_BuildTerran(), arg 1 Unit *
004637B0 = void Order_HealMove(), arg 1 Unit *
004654B0 = void Order_ReaverStop(), arg 1 Unit *
004550A0 = void Order_DefensiveMatrix(), arg 1 Unit *
0045D0D0 = void Order_BuildingMorph(), arg 1 Unit *
004E6880 = void Order_PlaceAddon(), arg 1 Unit *

004790A0 = void Order_BunkerGuard(), eax Unit *unit

004E6790 = void Order_BuildAddon(), eax Unit *unit
00466790 = void Order_TrainFighter(), eax Unit *unit
004932D0 = void Order_ShieldBattery(), edi Unit *unit
004EA780 = void Order_SpawningLarva(), esi Unit *unit
004EA880 = void Order_SpreadCreep(), eax Unit *unit
00491790 = void Order_Cloak(), eax Unit *unit
004633E0 = void Order_Decloak(), eax Unit *unit
00491C20 = void Order_CloakNearbyUnits(), edi Unit *unit

00474790 = InsertOrderTargetingGround(), arg 1 x, arg 2 y, esi Unit *self, ebx order, edi Order *insert_before
00474FB0 = IssueOrderTargetingGround(), esi Unit *self, arg 1 order, arg 2 fow_unit_id, arg 3 x, arg 4 y

00475BE0 = bool CheckFiringAngle(), esi const Unit *unit, ecx x, eax y, arg 1 weapon
00402A90 = bool IsMovingToMoveWaypoint(), eax Unit *unit
00431270 = dword CalculateBaseStrength(), arg 1 weapon_id, eax unit_id
00431150 = dword FinetuneBaseStrength(), eax unit_id, ecx base_strength

0047B5F0 = dword CalculateSpeedChange(), edx Unit *unit, eax base_speed
00495F20 = SetDirection(), eax Flingy *flingy, ebx direction
00492140 = bool ShouldStopOrderedSpell(), edi Unit *unit
00479D60 = Iscript_AttackWith(), eax Unit *unit, arg 1 ground
00479C30 = Iscript_UseWeapon(), arg 1 weapon_id, esi Unit *unit
004762C0 = GetClosestPointOfTarget(), arg 1 Unit *unit, arg 2 dword *out_x, arg 3 dword *out_y
004011A0 = SetMoveTargetToNearbyPoint(), eax direction, edx Flingy *flingy
00479D40 = FireWeapon(), eax Unit *parent, ebx weapon_id
004D5A00 = SetOffsetToParentsSpecialOverlay(), ecx Image *img

00473920 = dword GetPsiPlacementState(), arg 1 x_tile, arg 2 y_tile, esi unit_id, eax player
00473DB0 = dword GetGasBuildingPlacementState(), arg 1 x_tile, arg 2 y_tile, arg 3 player, arg 4 check_vision
00473150 = dword UpdateNydusPlacementState(), eax player, arg 1 x_tile, arg 2 y_tile, arg 3 size_wh, arg 4 placement_state_entry, arg 5 check_vision
00473010 = dword UpdateCreepBuildingPlacementState(), eax player, arg 1 x_tile, arg 2 y_tile, arg 3 size_wh, arg 4 placement_state_entry, arg 5 check_vision, arg 6 check_vision2
00473A10 = dword UpdateBuildingPlacementState_MapTileFlags(), arg 1 x_tile, arg 2 y_tile, arg 3 player, arg 4 size_wh, arg 5 placement_state_entry, arg 6 check_vision, eax unit_id
00473720 = dword UpdateBuildingPlacementState_Units(), arg 1 Unit *builder, arg 2 x_tile, eax y_tile, arg 3 player, arg 4 unit_id, arg 5 size_wh, arg 6 placement_state_entry, arg 7 dont_ignore_reacting, arg 8 also_invisible, arg 9 without_vision

004EB900 = MoveTowards(), ecx Unit *self, eax Unit *target
00495400 = MoveToCollide(), edi Unit *unit, eax Unit *target

00435770 = InheritAi(), ecx Unit *parent, eax Unit *unit
0045D890 = MutateBuilding(), eax Unit *drone, arg 1 unit_id
0042CE40 = ReduceBuildResources(), eax player
0042CF70 = int CheckSupplyForBuilding(), arg 1 player_id, arg 2 unit_id, arg 3 int notify_error
004678A0 = Unit *BeginGasBuilding(), arg 1 unit_id, eax Unit *worker
0045D2E0 = StartZergBuilding(), eax Unit *unit

00468970 = int LetNextUnitMine(), ebx Unit *resource
00468C70 = BeginHarvest(), eax Unit *worker, edi Unit *resource
00468AA0 = AddResetHarvestCollisionOrder(), eax Unit *worker
00402BE0 = bool IsFacingMoveTarget(), esi Flingy *flingy
00468E40 = FinishedMining(), ecx Unit *resource, eax Unit *worker
00447A70 = bool Ai_CanMineExtra(), eax Unit *worker
004F3AF0 = CreateResourceOverlay(), arg 1 unused_count, edx int minerals, edi Unit *worker, esi image_id
00468830 = UpdateMineralAmountAnimation(), ecx Unit *minerals
00493180 = MergeArchonStats(), eax Unit *archon, ecx Unit *other_templar

00441270 = Unit *SpiderMine_FindTarget(), esi Unit *mine
004E9A30 = Burrow_Generic(), eax Unit *unit
0049B1E0 = InstantCloak(), edi Unit *unit
004E99D0 = Unburrow_Generic(), eax Unit *unit

00464930 = DetachAddon(), eax Unit *parent
00453DD0 = CancelTech(), esi Unit *unit
00454220 = CancelUpgrade(), esi Unit *unit
0048E6E0 = EndAddonPlacement()
00499BB0 = ReplaceSprite(), arg 1 image_id, arg 2 direction, eax Sprite *sprite

004E93E0 = bool IsGoodLarvaPosition(), ebx Unit *larva, arg 1 x, arg 2 y
004E94B0 = GetDefaultLarvaPosition(), arg 1 Unit *larva, arg 2 dword *x, arg 3 dword *y
004A2450 = bool Ai_UnitSpecific(), eax Unit *unit
00435210 = Ai_WorkerAi(), arg 1 Unit *unit
004361A0 = bool Ai_TryProgressSpendingQueue(), ecx Unit *unit
0043D910 = Ai_Military(), eax Unit *unit
00436E70 = bool Ai_IsInAttack(), eax Unit *unit, arg 1 dont_count_moving_to_attack
00440770 = Unit *Ai_FindNearestRepairer(), eax Unit *unit
004A12C0 = Ai_SiegeTank(), eax Unit *unit
004A1340 = Ai_Burrower(), eax Unit *unit
00436AE0 = bool Ai_IsMilitaryAtRegionWithoutState0(), eax Unit *unit

00466270 = LoadFighter(), ecx Unit *carrier, eax Unit *interceptor

00472060 = Command_StartGame(), arg 1 player
00450210 = DrawDownloadStatuses()
004713E0 = Command_NewNetPlayer(), arg 1 net_player, edx const void *data
00471460 = Command_ChangeGameSlot(), eax net_player, ecx const void *data
00471300 = Command_ChangeRace(), arg 1 const void *data, arg 2 player
00471750 = Command_TeamGameTeam(), ecx const void *data, arg 1 player
00471670 = Command_UmsTeam(), arg 1 const void *data, arg 2 player
00471570 = Command_MeleeTeam(), ebx const void *data, arg 1 player
00471860 = Command_SwapPlayers(), ebx const void *data, arg 1 player
00472110 = Command_SavedData(), edx const void *data, eax player
004C46E0 = MakeGamePublic()
00418640 = Ctrl_LeftUp(), esi Control *ctrl

00414560 = RemoveCreepAtUnit(), ecx x, eax y, edx unit_id, arg 1 void *ClipCreepAreaInBounds_Cb
0049E4E0 = GiveSprite(), ecx Unit *unit, edx player
0048E1E0 = RedrawGasBuildingPlacement(), eax Unit *geyser

00442FC0 = Unit *PickReachableTarget(), esi Unit *unit
004E5DB0 = bool CanSeeTarget(), esi Unit *unit

004D2AA0 = ReadFile_Overlapped(), eax void *overlapped, edx size, ecx void *buf, edi void *file
004D2930 = void *OpenGrpFile(), edi char *filename
004D2880 = FileError(), ecx void *file, ebx error
004212C0 = ErrorMessageBox(), ebx error, arg 1 char *filename
004D2D10 = void *ReadMpqFile(), arg 1 const char *chk_path, arg 2 int, arg 3 int, arg 4 const char *source_file, arg 5 source_line, ecx open_mode, eax dword *out_filesize

00431030 = Unit **GetClickableUnits(), arg 1 x, eax y
00402A00 = bool IsClickablePixel(), arg 1 Unit *unit, edi x, ebx y

00470480 = KickPlayer(), esi net_player, eax reason
004A8D40 = InitPlayerStructs(), esi local_net_player
00470D10 = InitNetPlayer(), arg 1 int id, arg 2 flags, arg 3 x4, arg 4 x6
00470F90 = InitPlayerSlot(), edi Player *player
00470EF0 = InitNetPlayerInfo(), eax player
004A8CD0 = dword CountFreeSlots()
004C4160 = SetFreeSlots(), arg 1 free_slots
00470250 = SendInfoRequestCommand(), eax net_player
00472AB0 = InitMapDownload(), arg 1 MapDl *unk, arg 2 net_player
004A99C0 = dword GetFirstFreeHumanPlayerId()
0045ADE0 = dword GetFreeSlotFromEmptiestTeam()
00485710 = dword GetTeamGameTeamSize()

00496520 = InitFlingies()
004A1EA0 = InitAi()
0048CE90 = InitText()
004BD6F0 = InitTerrain()
00499900 = InitSprites()
00488550 = InitLoneSprites()
004D6930 = InitImages()
004CBED0 = InitColorCycling()
0041E450 = UpdateColorPaletteIndices(), arg 1 void *param, ebx void *func
004C99C0 = InitTransparency()
00488F90 = InitScoreSupply()
004CCC80 = LoadMiscDat()
00497110 = InitSpriteVisionSync()
004BD3F0 = InitScreenPositions()
004A13B0 = InitTerrainAi()
004DCC50 = CloseBnet()
004BB300 = BwError(), ecx char *file, eax line, edx char *msg, arg 1 network_tbl_error
004BF520 = dword LoadChk()
0049D8E0 = CreateTeamGameStartingUnits()
0049DA40 = CreateStartingUnits()
0049F380 = InitUnitSystem()
00493360 = InitPylonSystem()

004DEF80 = GetReplayPath(), arg 1 const char *base_name, eax void *out, esi max_len
004CE1C0 = bool WriteReplayData(), esi ReplayData *data, edi File *file
004CC6E0 = void *ReadChk(), arg 1 dword *out_filesize, eax char *map_path

00463040 = GiveAi(), eax Unit *unit

00465810 = bool Interceptor_Attack(), eax Unit *interceptor
00465D30 = Interceptor_Move(), eax Unit *unit, ecx area_size, arg 1 position

004770E0 = bool AttackRecentAttacker(), eax Unit *unit
0047CB90 = NeutralizeUnit(), esi Unit *unit
00497E80 = RemoveCloakDrawfuncs(), eax Sprite *sprite

0046A5A0 = FlyingBuilding_SwitchedState(), eax Unit *building
00463640 = FlyingBuilding_LiftIfStillBlocked(), eax Unit *building
004404A0 = Unit *FindClaimableAddon(), esi Unit *building
00463D50 = AttachAddon(), edi Unit *owner, eax Unit *addon
0048F5A0 = ShowLandingError(), eax Unit *unit

00476C50 = bool Ai_IsUnreachable(), esi Unit *self, eax Unit *other
00477F10 = MoveForMeleeRange(), arg 1 Unit *unit, eax Unit *target

00468200 = Unit *BeginTrain(), esi Unit *unit, edi unit_id, arg 1 notify_error
00402C40 = dword GetBuildHpGain(), eax Unit *unit
004679A0 = dword ProgressBuild(), eax Unit *unit, edx hp_gain, arg 1 unk
00466F50 = RallyUnit(), ecx Unit *parent, eax Unit *created

00434220 = AiScript_StartTown(), arg 1 x, arg 2 y, arg 3 unk, eax player

### storm (15000000)

15020ED0 = void *SMemAlloc(), arg 1 dword amt, arg 2 const char *file, arg 3 dword line, arg 4 dword fill
150205D0 = SMemFree(), arg 1 void *a, arg 2 const char *f, arg 3 dword line, arg 4 dword meh
15014A80 = SFileCloseArchive(), arg 1 void *archive
150152B0 = SFileCloseFile(), arg 1 void *file
1503E560 = dword SNetInitializeProvider(), arg 1 void *eka, arg 2 void *toka, arg 3 void *koka, arg 4 void *neka, arg 5 void *vika
150370C0 = dword SNetGetPlayerName(), arg 1 player, arg 2 char *buf, arg 3 buf_size
15013F50 = dword SFileGetFileSize(), arg 1 void *file, arg 2 dword *out_high
15024D50 = dword SBmpDecodeImage(), arg 1 int, arg 2 const void *img, arg 3 input_size, arg 4 int, arg 5 void *out, arg 6 size, arg 7 dword *width, arg 8 dword *height, arg 9 int

