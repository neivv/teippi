// No header guards

#ifndef BW_FUNC
#define BW_FUNC(signature, name, addr, ...) \
    extern patch_func::Stdcall<signature> name
#endif
#ifndef FUNC_LIST_START
#define FUNC_LIST_START(namesp, name) namespace namesp {
#define FUNC_LIST_END(name) }
#endif

FUNC_LIST_START(bw, bw_1161)
BW_FUNC(void (Unit *), ProgressSecondaryOrder_Hidden, 0x004EC120, Eax);
BW_FUNC(void(Unit *), ProgressUnitMovement, 0x0046C480, Eax);
BW_FUNC(void(Unit *), ProgressAcidSporeTimers, 0x004F42C0, Eax);
BW_FUNC(void(Unit *), ProgressEnergyRegen, 0x004EB4B0, Esi);
BW_FUNC(void(Unit *, int), ProgressSubunitDirection, 0x004EB660, Esi, Stack);
BW_FUNC(bool(const Unit *, const Unit *), IsOutOfRange, 0x00476430, Eax, Stack);
BW_FUNC(bool(Unit *), HasTargetInRange, 0x00442460, Edx);
BW_FUNC(void(Unit *, Unit *, int, int), AttackUnit, 0x00476FC0, Edi, Eax, Stack, Stack);
BW_FUNC(void(Unit *), Ai_StimIfNeeded, 0x0043FFD0, Stack);
BW_FUNC(bool(Unit *, int), IsReadyToAttack, 0x00476640, Eax, Stack);
BW_FUNC(Unit *(int, x32, y32, int), CreateUnit, 0x004A09D0, Ecx, Eax, Stack, Stack);
BW_FUNC(int(Unit *, int, int, int, int), InitializeUnitBase, 0x004A0320, Ecx, Eax, Stack, Stack, Stack);
BW_FUNC(void(Unit *), FinishUnit_Pre, 0x004A01F0, Eax);
BW_FUNC(void(Unit *), FinishUnit, 0x0049FA40, Eax);
BW_FUNC(void(Unit *, int), TransformUnit, 0x0049FED0, Eax, Stack);
BW_FUNC(int(Unit *, int), PrepareBuildUnit, 0x00467250, Edi, Stack);
BW_FUNC(int(Unit *, int, int), GiveUnit, 0x0049EFA0, Ecx, Stack, Stack);
BW_FUNC(void(Unit *, int), SetHp, 0x00467340, Eax, Ecx);
BW_FUNC(int(const Unit *, const Unit *), GetMissChance, 0x004765B0, Ecx, Eax);
BW_FUNC(int(const Unit *), GetBaseMissChance, 0x00476210, Eax);
BW_FUNC(int(const Unit *, int), GetCurrentStrength, 0x00431730, Ecx, Eax);
BW_FUNC(bool(const Unit *), IsMultiSelectable, 0x0047B770, Ecx);
BW_FUNC(int(Unit *, int, int), CheckUnitDatRequirements, 0x0046E1C0, Esi, Eax, Stack);
BW_FUNC(bool(const Unit *, const Unit *), IsHigherRank, 0x0049A350, Edi, Esi);
BW_FUNC(bool(const Unit *, const Unit *), IsTooClose, 0x004764D0, Eax, Esi);
BW_FUNC(bool(int, x32, y32, int), IsPowered, 0x004936B0, Eax, Stack, Stack, Stack);
BW_FUNC(void(Unit *, MovementGroup *), GetFormationMovementTarget, 0x0049A500, Stack, Stack);
BW_FUNC(int(Unit *), ShowRClickErrorIfNeeded, 0x00455A00, Stack);
BW_FUNC(int(Unit *, int), NeedsMoreEnergy, 0x00491480, Stack, Stack);
BW_FUNC(void(Unit *, x32, y32), MoveUnit, 0x004EBAE0, Edx, Eax, Ecx);
BW_FUNC(void(Unit *), MoveUnit_Partial, 0x0046AD90, Eax);
BW_FUNC(void(Unit *), HideUnit, 0x004E6340, Eax);
BW_FUNC(void(Unit *, int), HideUnit_Partial, 0x00493CA0, Edi, Stack);
BW_FUNC(void(Unit *), ShowUnit, 0x004E6490, Edi);
BW_FUNC(void(Unit *), DisableUnit, 0x00492CC0, Eax);
BW_FUNC(void(Unit *), AcidSporeUnit, 0x004F4480, Ebx);
BW_FUNC(void(Unit *), FinishMoveUnit, 0x00494160, Eax);
BW_FUNC(void(Unit *), PlayYesSoundAnim, 0x0048F4D0, Eax);
BW_FUNC(bool(uint16_t *, Unit *, Unit *), GetUnloadPosition, 0x004E76C0, Stack, Eax, Esi);
BW_FUNC(void(Unit *, int), ModifyUnitCounters, 0x00488BF0, Eax, Stack);
BW_FUNC(void(Unit *, int, int), ModifyUnitCounters2, 0x00488D50, Edi, Ecx, Stack);
BW_FUNC(void(Unit *), AddToCompletedUnitLbScore, 0x00460860, Ecx);
BW_FUNC(bool(Unit *, int, int), CanPlaceBuilding, 0x0048DBD0, Ecx, Eax, Edx);
BW_FUNC(void(Unit *, int, int), ClearBuildingTileFlag, 0x00469EC0, Eax, Stack, Stack);
BW_FUNC(void(Unit *, int), RemoveReferences, 0x0049EB70, Edi, Stack);
BW_FUNC(void(Unit *), StopMoving, 0x004EB290, Eax);
BW_FUNC(void(Unit *), RemoveFromMap, 0x0046A560, Eax);
BW_FUNC(void(Unit *), DropPowerup, 0x004F3B70, Stack);
BW_FUNC(void(Unit *), UpdateVisibility, 0x004EBE10, Esi);
BW_FUNC(void(Unit *), UpdateDetectionStatus, 0x00443390, Eax);
BW_FUNC(void(Unit *), RemoveFromCloakedUnits, 0x004916E0, Ecx);
BW_FUNC(void(Unit *, int), BeginInvisibility, 0x0049B5B0, Eax, Ecx);
BW_FUNC(void(Unit *, int), EndInvisibility, 0x0049B440, Eax, Ebx);
BW_FUNC(void(Unit *), Unburrow, 0x004E97C0, Eax);
BW_FUNC(void(Unit *), CancelBuildingMorph, 0x0045D410, Eax);
BW_FUNC(void(int, int), RefundFullCost, 0x0042CEC0, Ecx, Eax);
BW_FUNC(void(int, int), RefundFourthOfCost, 0x0042CE70, Ecx, Eax);
BW_FUNC(void(Unit *), DeletePowerupImages, 0x004F3900, Eax);
BW_FUNC(bool(Unit *, Unit *, int), IsPointAtUnitBorder, 0x0042DA90, Stack, Edx, Stack);
BW_FUNC(void(const void *, int), SendCommand, 0x00485BD0, Ecx, Edx);
BW_FUNC(Unit *(), NextCommandedUnit, 0x0049A850);
BW_FUNC(bool(int, int), IsOutsideGameScreen, 0x004D1140, Ecx, Eax);
BW_FUNC(void(Control *), MarkControlDirty, 0x0041C400, Eax);
BW_FUNC(void(Rect32 *), CopyToFrameBuffer, 0x0041D3A0, Esi);
BW_FUNC(bool(const Unit *, const Unit *), HasToDodge, 0x0042DF70, Edx, Eax);
BW_FUNC(void(Contour *, PathingData *, Contour **, Contour **), InsertContour, 0x00421910, Edx, Stack, Stack, Stack);
BW_FUNC(void(MovementGroup *, int), PrepareFormationMovement, 0x0049A8C0, Edi, Stack);
BW_FUNC(int(x32, y32, x32, y32), GetFacingDirection, 0x00495300, Edx, Stack, Ecx, Eax);
BW_FUNC(int(const Unit *, const Unit *), GetOthersLocation, 0x004F1A20, Stack, Eax);
BW_FUNC(int(int, int), GetEnemyAirStrength, 0x00431D00, Eax, Stack);
BW_FUNC(int(int, int, int), GetEnemyStrength, 0x004318E0, Eax, Stack, Stack);
BW_FUNC(bool(Unit *, int, int), CanWalkHere, 0x0042FA00, Eax, Edx, Stack);
BW_FUNC(bool(int, int, int), AreConnected, 0x00437E70, Eax, Esi, Ebx);
BW_FUNC(int(Unit *, uint32_t), MakePath, 0x0042FE00, Eax, Stack);
BW_FUNC(bool(Unit *, int), UpdateMovementState, 0x0046A940, Eax, Stack);
BW_FUNC(Unit *(Unit *), FindCollidingUnit, 0x004F20D0, Ebx);
BW_FUNC(int(Unit *), TerrainCollision, 0x004F1980, Eax);
BW_FUNC(bool(const Unit *, int, int, int), DoesBlockPoint, 0x0042DA00, Edx, Stack, Stack, Stack);
BW_FUNC(bool(const void *, int, File *), WriteCompressed, 0x004C3450, Eax, Stack, Stack);
BW_FUNC(bool(void *, int, File *), ReadCompressed, 0x004C3280, Stack, Stack, Stack);
BW_FUNC(void(File *), SaveDisappearingCreepChunk, 0x0047DA80, Edi);
BW_FUNC(void(File *), SaveDatChunk, 0x004BF390, Esi);
BW_FUNC(void(File *), SaveTriggerChunk, 0x004899D0, Stack);
BW_FUNC(void(File *, const char *), WriteReadableSaveHeader, 0x004CE950, Ebx, Stack);
BW_FUNC(void(uint32_t, File *), WriteSaveHeader, 0x004CF160, Stack, Stack);
BW_FUNC(void(char *, int), ReplaceWithShortPath, 0x004CE370, Esi, Edi);
BW_FUNC(void(char *, int), ReplaceWithFullPath, 0x004CE300, Edi, Esi);
BW_FUNC(uint32_t(), FirstCommandUser, 0x004C3DB0);
BW_FUNC(bool(const char *, int, int), IsInvalidFilename, 0x004F3F20, Edx, Ecx, Eax);
BW_FUNC(bool(const char *, char *, int, int), GetUserFilePath, 0x004CF2A0, Stack, Ecx, Eax, Ebx);
BW_FUNC(void(const char *), ShowWaitDialog, 0x004F5C50, Esi);
BW_FUNC(void(), HidePopupDialog, 0x004F5930);
BW_FUNC(void(), DeleteAiRegions, 0x00436A40);
BW_FUNC(void(int), AllocateAiRegions, 0x00436A80, Eax);
BW_FUNC(bool(File *), LoadDisappearingCreepChunk, 0x0047D9D0, Esi);
BW_FUNC(bool(File *), LoadTriggerChunk, 0x004897E0, Stack);
BW_FUNC(bool(File *, int), LoadDatChunk, 0x004BF020, Esi, Stack);
BW_FUNC(void(), RestorePylons, 0x00494030);
BW_FUNC(int(int, Unit *, int, int), PlaySound, 0x0048ED50, Ebx, Esi, Stack, Stack);
BW_FUNC(void(int, uint32_t, int, int), PlaySoundAtPos, 0x0048EC10, Ebx, Stack, Stack, Stack);
BW_FUNC(void(const char *, int, int), PrintText, 0x0048D1C0, Stack, Stack, Eax);
BW_FUNC(void(int, int, int), ShowInfoMessage, 0x0048EE30, Edi, Esi, Ebx);
BW_FUNC(void(const char *, int, Unit *), ShowErrorMessage, 0x0048EF30, Eax, Ecx, Edx);
BW_FUNC(void(const char *), PrintInfoMessage, 0x0048CCB0, Eax);
BW_FUNC(void(const char *, int), PrintInfoMessageForLocalPlayer, 0x0048CF00, Eax, Ecx);
BW_FUNC(void(), ToggleSound, 0x004BC110);
BW_FUNC(void(Unit *, int, int, int), TalkingPortrait, 0x0045EFE0, Eax, Edi, Stack, Stack);
BW_FUNC(int(x32, y32, x32, y32), Distance, 0x0040C360, Ecx, Stack, Edx, Stack);
BW_FUNC(bool(const Unit *, int, x32, y32), IsPointInArea, 0x00401240, Ecx, Stack, Stack, Eax);
BW_FUNC(bool(const Unit *, int, const Unit *), IsInArea, 0x00430F10, Ecx, Stack, Stack);
BW_FUNC(void(int), ProgressTime, 0x00489CC0, Edx);
BW_FUNC(void(TriggerList *), ProgressTriggerList, 0x00489450, Eax);
BW_FUNC(void(Trigger *), ProgressActions, 0x00489130, Esi);
BW_FUNC(void(), ApplyVictory, 0x0048A200);
BW_FUNC(void(), CheckVictoryState, 0x0048A410);
BW_FUNC(void(Control *, int), DeleteTimer, 0x00416000, Esi, Edx);
BW_FUNC(Unit *(int, int, int), FindUnitInLocation, 0x004C7380, Stack, Stack, Eax);
BW_FUNC(void(int, int, int), PingMinimap, 0x004A34C0, Stack, Stack, Stack);
BW_FUNC(void(int, int, int, int), Trigger_Portrait, 0x0045EDD0, Stack, Esi, Edi, Stack);
BW_FUNC(const char *(int), GetChkString, 0x004BD0C0, Edx);
BW_FUNC(uint32_t(const char *), GetTextDisplayTime, 0x004C51D0, Eax);
BW_FUNC(void(const char *, int), Trigger_DisplayText, 0x0048CF20, Esi, Stack);
BW_FUNC(bool(Unit *, Unit *, int), CanHitUnit, 0x00475CE0, Edx, Stack, Eax);
BW_FUNC(void(Bullet *), ProgressBulletMovement, 0x0048B250, Eax);
BW_FUNC(void(void *, int, int), ChangeMovePos, 0x00495240, Eax, Esi, Ecx);
BW_FUNC(void(Unit *), UpdateDamageOverlay, 0x004E6090, Esi);
BW_FUNC(void(int, int, x32, y32, int), ShowArea, 0x004806F0, Eax, Ecx, Stack, Stack, Stack);
BW_FUNC(void(void *), ChangeDirectionToMoveWaypoint, 0x00495840, Esi);
BW_FUNC(void(void *), ProgressSpeed, 0x00495CB0, Esi);
BW_FUNC(void(void *), UpdateIsMovingFlag, 0x00495080, Eax);
BW_FUNC(void(void *), ChangedDirection, 0x00495100, Eax);
BW_FUNC(void(void *, int, int), ProgressMoveWith, 0x00495980, Ecx, Eax, Edx);
BW_FUNC(bool(Flingy *), MoveFlingy, 0x00496030, Stack);
BW_FUNC(void(Flingy *, int), SetSpeed, 0x00494F60, Ecx, Edx);
BW_FUNC(void(Sprite *), PrepareDrawSprite, 0x004983A0, Eax);
BW_FUNC(void(Sprite *), DrawSprite, 0x00498C50, Eax);
BW_FUNC(uint8_t(int, int, int, int), GetAreaVisibility, 0x00402500, Stack, Stack, Stack, Edx);
BW_FUNC(uint8_t(int, int, int, int), GetAreaExploration, 0x00402570, Stack, Stack, Stack, Edx);
BW_FUNC(void(Sprite *, int), SetVisibility, 0x00497480, Ebx, Stack);
BW_FUNC(void(Sprite *, int), DrawTransmissionSelectionCircle, 0x004EBBD0, Esi, Stack);
BW_FUNC(void(int), DrawOwnMinimapUnits, 0x004A48E0, Eax);
BW_FUNC(void(int, x32, y32, int, int, int), DrawMinimapDot, 0x004A3FD0, Ecx, Eax, Stack, Stack, Stack, Stack);
BW_FUNC(void(int), DrawNeutralMinimapUnits, 0x004A4650, Ecx);
BW_FUNC(void(int), DrawMinimapUnits, 0x004A47B0, Ecx);
BW_FUNC(void(Sprite *, int, int), MoveSprite, 0x00497A10, Ecx, Ebx, Edi);
BW_FUNC(Unit *(x32, y32, int), FindFowUnit, 0x00487FD0, Ecx, Eax, Stack);
BW_FUNC(void(Sprite *, int, int, int, int), AddOverlayHighest, 0x00498EA0, Eax, Esi, Stack, Stack, Stack);
BW_FUNC(void(Sprite *, int, int, int, int), AddOverlayBelowMain, 0x00498D70, Eax, Esi, Stack, Stack, Stack);
BW_FUNC(void(Image *), PrepareDrawImage, 0x004D57B0, Eax);
BW_FUNC(void(Image *), MarkImageAreaForRedraw, 0x004970A0, Eax);
BW_FUNC(void(Image *, int), SetImageDirection32, 0x004D5EA0, Eax, Stack);
BW_FUNC(void(Image *, int), SetImageDirection256, 0x004D5F80, Esi, Stack);
BW_FUNC(int(const Unit *, int), MatchesHeight, 0x0045F8D0, Eax, Esi);
BW_FUNC(int(int, int), GetTerrainHeight, 0x004BD0F0, Ecx, Eax);
BW_FUNC(void(int, x32, y32, int), UpdateCreepDisappearance, 0x0047DE40, Stack, Edx, Ecx, Eax);
BW_FUNC(bool(Unit *, int, int), Ai_AreOnConnectedRegions, 0x00438E70, Eax, Stack, Stack);
BW_FUNC(bool(int, x32, y32), DoesFitHere, 0x0042D810, Ebx, Eax, Edi);
BW_FUNC(bool(Rect16 *, Unit *, uint16_t *, uint16_t *, int, int), GetFittingPosition, 0x0049D3E0, Eax, Stack, Stack, Stack, Stack, Stack);
BW_FUNC(int(int, uint16_t *), ClipPointInBoundsForUnit, 0x00401FA0, Eax, Edx);
BW_FUNC(void(int, int), MoveScreen, 0x0049C440, Eax, Ecx);
BW_FUNC(void(int), ClearSelection, 0x0049A740, Eax);
BW_FUNC(bool(int), HasTeamSelection, 0x0049A110, Eax);
BW_FUNC(bool(int, int, Unit *), AddToPlayerSelection, 0x0049AF80, Edi, Ebx, Esi);
BW_FUNC(bool(Unit * const *, int), UpdateSelectionOverlays, 0x0049AE40, Eax, Stack);
BW_FUNC(void(Unit *), MakeDashedSelectionCircle, 0x004E65C0, Eax);
BW_FUNC(void(Sprite *), RemoveDashedSelectionCircle, 0x00497590, Eax);
BW_FUNC(int(Unit *, int), RemoveFromSelection, 0x0049A170, Eax, Stack);
BW_FUNC(void(Unit *), RemoveFromSelections, 0x0049A7F0, Edi);
BW_FUNC(void(Unit *), RemoveFromClientSelection3, 0x0049F7A0, Eax);
BW_FUNC(int(int, Unit *, int), CanUseTech, 0x0046DD80, Edi, Eax, Stack);
BW_FUNC(int(Unit *, x32, y32, int16_t *, int, Unit *, int), CanTargetSpell, 0x00492020, Stack, Stack, Stack, Stack, Edx, Edi, Esi);
BW_FUNC(int(int, Unit *, int), CanTargetSpellOnUnit, 0x00491E80, Stack, Eax, Ebx);
BW_FUNC(int(Unit *, int, int, uint16_t *, int), SpellOrder, 0x004926D0, Ebx, Stack, Stack, Stack, Eax);
BW_FUNC(void(Unit *, int), ApplyStasis, 0x004F67B0, Edi, Stack);
BW_FUNC(void(Unit *), ApplyEnsnare, 0x004F45E0, Edi);
BW_FUNC(void(Unit *, int), ApplyMaelstrom, 0x004553F0, Edi, Stack);
BW_FUNC(void(Unit *), UpdateSpeed, 0x00454310, Eax);
BW_FUNC(void(Unit *), EndStasis, 0x004F62D0, Esi);
BW_FUNC(void(Unit *), EndLockdown, 0x00454D90, Esi);
BW_FUNC(void(Unit *), EndMaelstrom, 0x00454D20, Esi);
BW_FUNC(Unit*(int, Unit *), Hallucinate, 0x004F6B90, Stack, Ecx);
BW_FUNC(int(Unit *), PlaceHallucination, 0x004F66D0, Eax);
BW_FUNC(int(Unit *, int, int), CanIssueOrder, 0x0046DC20, Eax, Ebx, Stack);
BW_FUNC(bool(Unit *, Unit *, int, int16_t *), CanTargetOrder, 0x00474D90, Ebx, Esi, Eax, Stack);
BW_FUNC(bool(Unit *, int, int, int16_t *), CanTargetOrderOnFowUnit, 0x004746D0, Ebx, Ecx, Edx, Edi);
BW_FUNC(void(Unit *), DoNextQueuedOrderIfAble, 0x00475420, Eax);
BW_FUNC(uint32_t(Unit *, const Unit *), PrepareFlee, 0x00476A50, Stack, Eax);
BW_FUNC(bool(Unit *, Unit *), Flee, 0x0043E400, Eax, Stack);
BW_FUNC(Unit *(Unit *, int), FindNearestUnitOfId, 0x004410C0, Eax, Stack);
BW_FUNC(void(Ai::Region *, int), ChangeAiRegionState, 0x004390A0, Esi, Ebx);
BW_FUNC(bool(Unit *), Ai_ReturnToNearestBaseForced, 0x0043DB50, Esi);
BW_FUNC(void(Unit *, Unit *), Ai_Detect, 0x0043C580, Eax, Stack);
BW_FUNC(bool(Unit *, int), Ai_CastReactionSpell, 0x004A13C0, Eax, Stack);
BW_FUNC(bool(Ai::Town *), TryBeginDeleteTown, 0x00434330, Esi);
BW_FUNC(Unit *(int, x32, y32, int), FindNearestAvailableMilitary, 0x004379B0, Stack, Stack, Ebx, Ecx);
BW_FUNC(void(Ai::GuardAi *, int), Ai_GuardRequest, 0x00448630, Eax, Ecx);
BW_FUNC(bool(Unit *, Unit *), Ai_ShouldKeepTarget, 0x00476930, Ecx, Eax);
BW_FUNC(void(Ai::Region *), Ai_RecalculateRegionStrength, 0x0043A390, Esi);
BW_FUNC(void(int, int), Ai_PopSpendingRequestResourceNeeds, 0x00447D00, Ecx, Stack);
BW_FUNC(void(int), Ai_PopSpendingRequest, 0x004476D0, Eax);
BW_FUNC(bool(int, int), Ai_DoesHaveResourcesForUnit, 0x004487B0, Stack, Ecx);
BW_FUNC(bool(Unit *, int, int, void *), Ai_TrainUnit, 0x004672F0, Eax, Stack, Stack, Stack);
BW_FUNC(void(Unit *, Unit*), InheritAi2, 0x004A2830, Ecx, Eax);
BW_FUNC(Ai::UnitAi *(Ai::Region *, int, int, int, Ai::Region *), Ai_FindNearestActiveMilitaryAi, 0x0043BC40, Stack, Stack, Stack, Stack, Stack);
BW_FUNC(Ai::UnitAi *(Ai::Region *, int, int, int, int, Ai::Region *), Ai_FindNearestMilitaryOrSepContAi, 0x0043BAC0, Stack, Stack, Stack, Stack, Stack, Stack);
BW_FUNC(bool(Unit *, int, int), Ai_PrepareMovingTo, 0x004E7420, Stack, Stack, Stack);
BW_FUNC(void(Unit *, int, int, int), ProgressMilitaryAi, 0x0043D5D0, Stack, Stack, Stack, Stack);
BW_FUNC(void(Ai::Region *), Ai_UpdateSlowestUnitInRegion, 0x00436F70, Stack);
BW_FUNC(void(Ai::Script *), ProgressAiScript, 0x0045B850, Stack);
BW_FUNC(void(Unit *, int), RemoveFromAiStructs, 0x00439D60, Stack, Stack);
BW_FUNC(void(int, Unit *), Ai_UpdateRegionStateUnk, 0x0043A010, Stack, Stack);
BW_FUNC(void(Unit *), Ai_UnloadFailure, 0x0043DF30, Stack);
BW_FUNC(bool(int, int, int, int, int), Ai_AttackTo, 0x0043ABB0, Stack, Stack, Stack, Stack, Stack);
BW_FUNC(void(int), Ai_EndAllMovingToAttack, 0x00439500, Stack);
BW_FUNC(void(), DrawFlashingSelectionCircles, 0x004D9460);
BW_FUNC(void(), Replay_RefershUiIfNeeded, 0x004DEED0);
BW_FUNC(bool(uint32_t *), ProgressTurns, 0x004D9550, Ecx);
BW_FUNC(void(), Victory, 0x00461640);
BW_FUNC(bool(Unit *), UpdateCreepDisappearance_Unit, 0x0047DF90, Stack);
BW_FUNC(void(), TryUpdateCreepDisappear, 0x0047E410);
BW_FUNC(void(), ProgressCreepDisappearance, 0x0049C4C0);
BW_FUNC(void(), UpdateFog, 0x00480880);
BW_FUNC(void(Unit *), RevealSightArea, 0x004E5F30, Stack);
BW_FUNC(void(), Ai_ProgressRegions, 0x0043FD80);
BW_FUNC(void(), UpdateResourceAreas, 0x00445610);
BW_FUNC(void(), Ai_Unk_004A2A40, 0x004A2A40);
BW_FUNC(void(), AddSelectionOverlays, 0x00499A60);
BW_FUNC(int(int, int, int, int), IsCompletelyHidden, 0x00402380, Ecx, Edx, Stack, Stack);
BW_FUNC(int(int, int, int, int), IsCompletelyUnExplored, 0x00402440, Ecx, Edx, Stack, Stack);
BW_FUNC(int(), Ui_NeedsRedraw_Unk, 0x00424A10);
BW_FUNC(int(), GenericStatus_DoesNeedRedraw, 0x00424980);
BW_FUNC(int(int, int, Unit *), IsOwnedByPlayer, 0x0045FEF0, Ecx, Edx, Stack);
BW_FUNC(int(Unit *), CanControlUnit, 0x00401170, Stack);
BW_FUNC(void(), AddToRecentSelections, 0x004967A0);
BW_FUNC(void(), EndTargeting, 0x0048CA10);
BW_FUNC(void(), MarkPlacementBoxAreaDirty, 0x0048D9A0);
BW_FUNC(void(), EndBuildingPlacement, 0x0048E310);
BW_FUNC(Image *(Sprite *, int, int, int, int), AddOverlayNoIscript, 0x00498F40, Eax, Stack, Stack, Stack, Stack);
BW_FUNC(void(int), SetCursorSprite, 0x004843F0, Stack);
BW_FUNC(void(Sprite *), RemoveSelectionCircle, 0x004975D0, Ecx);
BW_FUNC(int(const Unit *, uint32_t), DoUnitsBlock, 0x0042E1D0, Stack, Stack);
BW_FUNC(void(Unit *), Notify_UnitWasHit, 0x0048F230, Stack);
BW_FUNC(int(void *), STransBind, 0x00410316, Stack);
BW_FUNC(int(void *, uint8_t *, int, void **), STrans437, 0x00411E1E, Stack, Stack, Stack, Stack);
BW_FUNC(int(int, int, int, int), ContainsDirtyArea, 0x0041DE20, Stack, Stack, Stack, Stack);
BW_FUNC(void(), CopyGameScreenToFramebuf, 0x0041D420);
BW_FUNC(void(int), ShowLastError, 0x0049E530, Stack);
BW_FUNC(bool(const void *), Command_Sync_Main, 0x0047CDD0, Edi);
BW_FUNC(void(const void *), Command_Load, 0x004CF950, Ebx);
BW_FUNC(void(), Command_Restart, 0x004BFB10);
BW_FUNC(void(), Command_Pause, 0x004C0BC0);
BW_FUNC(void(), Command_Resume, 0x004C0B00);
BW_FUNC(void(const void *), Command_Build, 0x004C23C0, Esi);
BW_FUNC(void(const void *), Command_MinimapPing, 0x004BF7A0, Eax);
BW_FUNC(void(const void *), Command_Vision, 0x004BF9C0, Eax);
BW_FUNC(void(const void *), Command_Ally, 0x004C28A0, Stack);
BW_FUNC(void(const void *), Command_Cheat, 0x004C0AD0, Edx);
BW_FUNC(void(const void *), Command_Hotkey, 0x004C2870, Ecx);
BW_FUNC(void(), Command_CancelBuild, 0x004C2EF0);
BW_FUNC(void(), Command_CancelMorph, 0x004C2EC0);
BW_FUNC(void(const void *), Command_Stop, 0x004C2190, Edi);
BW_FUNC(void(), Command_CarrierStop, 0x004C1430);
BW_FUNC(void(), Command_ReaverStop, 0x004C1240);
BW_FUNC(void(), Command_Order_Nothing, 0x004C1050);
BW_FUNC(void(const void *), Command_ReturnCargo, 0x004C2040, Edi);
BW_FUNC(void(const void *), Command_Train, 0x004C1C20, Eax);
BW_FUNC(void(const void *), Command_CancelTrain, 0x004C0100, Stack);
BW_FUNC(void(const void *), Command_Tech, 0x004C1BA0, Stack);
BW_FUNC(void(), Command_CancelTech, 0x004C0070);
BW_FUNC(void(const void *), Command_Upgrade, 0x004C1B20, Stack);
BW_FUNC(void(), Command_CancelUpgrade, 0x004BFFC0);
BW_FUNC(void(const void *), Command_Burrow, 0x004C1FA0, Stack);
BW_FUNC(void(), Command_Unburrow, 0x004C1AC0);
BW_FUNC(void(), Command_Cloak, 0x004C0720);
BW_FUNC(void(), Command_Decloak, 0x004C0660);
BW_FUNC(void(const void *), Command_UnitMorph, 0x004C1990, Stack);
BW_FUNC(void(const void *), Command_BuildingMorph, 0x004C1910, Eax);
BW_FUNC(void(const void *), Command_Unsiege, 0x004C1F10, Stack);
BW_FUNC(void(const void *), Command_Siege, 0x004C1E80, Stack);
BW_FUNC(void(), Command_MergeArchon, 0x004C0E90);
BW_FUNC(void(), Command_MergeDarkArchon, 0x004C0CD0);
BW_FUNC(void(const void *), Command_HoldPosition, 0x004C20C0, Edi);
BW_FUNC(void(), Command_CancelNuke, 0x004BFCD0);
BW_FUNC(void(const void *), Command_Lift, 0x004C1620, Stack);
BW_FUNC(void(), Command_TrainFighter, 0x004C1800);
BW_FUNC(void(), Command_CancelAddon, 0x004BFF30);
BW_FUNC(void(), Command_Stim, 0x004C2F30);
BW_FUNC(void(const void *), Command_Latency, 0x00485E60, Eax);
BW_FUNC(void(const void *), Command_LeaveGame, 0x004C2E90, Stack);
BW_FUNC(void(const void *), Command_UnloadAll, 0x004C1CC0, Edi);
BW_FUNC(void(int, int, int), ChangeReplaySpeed, 0x004DEB90, Eax, Ecx, Edx);
BW_FUNC(void(ReplayData *, int, const void *, int), AddToReplayData, 0x004CDE70, Eax, Stack, Ebx, Edi);
BW_FUNC(void(Control *, const char *, int), SetLabel, 0x004258B0, Eax, Stack, Ecx);
BW_FUNC(void(TriggerList *), FreeTriggerList, 0x00402330, Ebx);
BW_FUNC(void(uint32_t), Storm_LeaveGame, 0x004C3D20, Stack);
BW_FUNC(void(Control *), RemoveDialog, 0x00419EA0, Esi);
BW_FUNC(void(), ResetGameScreenEventHandlers, 0x00484CC0);
BW_FUNC(void(), DeleteDirectSound, 0x004BBF50);
BW_FUNC(void(), StopSounds, 0x004A5F50);
BW_FUNC(void(int), InitOrDeleteRaceSounds, 0x0048FB40, Stack);
BW_FUNC(void(), FreeMapData, 0x004BD190);
BW_FUNC(void(), FreeGameDialogs, 0x004C3780);
BW_FUNC(void(), FreeEffectsSCodeUnk, 0x00416D90);
BW_FUNC(void(), WindowPosUpdate, 0x004D2FF0);
BW_FUNC(void(), ReportGameResult, 0x004C4790);
BW_FUNC(void(), ClearNetPlayerData, 0x004D4AC0);
BW_FUNC(void(void *), FreeUnkSound, 0x004015F0, Ebx);
BW_FUNC(void(int), Unpause, 0x00488790, Stack);
BW_FUNC(void(Image *), DeleteHealthBarImage, 0x004D5030, Esi);
BW_FUNC(void(Image *), DeleteSelectionCircleImage, 0x004D4FA0, Esi);
BW_FUNC(void(Unit *, int, int), SetBuildingTileFlag, 0x00469F60, Eax, Stack, Stack);
BW_FUNC(void(Unit *), CheckUnstack, 0x0042D9A0, Eax);
BW_FUNC(void(Unit *), IncrementAirUnitx14eValue, 0x00453300, Esi);
BW_FUNC(void(Unit *), ForceMoveTargetInBounds, 0x0046A740, Ecx);
BW_FUNC(bool(Unit *), ProgressRepulse, 0x00453420, Eax);
BW_FUNC(void(Unit *, int), FinishRepulse, 0x004535A0, Eax, Stack);
BW_FUNC(void(Unit *), FinishUnitMovement, 0x0046AD90, Eax);
BW_FUNC(bool(Unit *, Unit *), IsInFrontOfMovement, 0x004F17C0, Esi, Ecx);
BW_FUNC(void(Unit *), Iscript_StopMoving, 0x0046A6B0, Ecx);
BW_FUNC(void(Unit *), InstantStop, 0x0046BF00, Eax);
BW_FUNC(void(Unit *, int), SetSpeed_Iscript, 0x004951C0, Eax, Edx);
BW_FUNC(const char *(int), GetGluAllString, 0x004DDD30, Stack);
BW_FUNC(void(GameData *, Player *), ReadStruct245, 0x004DE9D0, Edx, Eax);
BW_FUNC(bool(const char *, void *, int), PreloadMap, 0x004BF5D0, Stack, Stack, Stack);
BW_FUNC(void(), AllocateReplayCommands, 0x004CE280);
BW_FUNC(bool(File *), LoadReplayCommands, 0x004CE220, Ebx);
BW_FUNC(int(const Unit *, const Unit *), GetThreatLevel, 0x00442160, Ebx, Edi);
BW_FUNC(void(Unit *), Ai_FocusUnit, 0x0043FF00, Eax);
BW_FUNC(void(Unit *), Ai_FocusUnit2, 0x0043FF90, Eax);
BW_FUNC(void(Unit *), Order_JunkYardDog, 0x0047C210, Eax);
BW_FUNC(void(Unit *), Order_Medic, 0x00463900, Eax);
BW_FUNC(void(Unit *), Order_Obscured, 0x004F6FA0, Eax);
BW_FUNC(void(Unit *), Order_Spell, 0x00492850, Eax);
BW_FUNC(void(Unit *), Order_WatchTarget, 0x0047BAB0, Eax);
BW_FUNC(void(Unit *), Order_ReaverAttack, 0x00465690, Eax);
BW_FUNC(void(Unit *), Order_Unload, 0x004E80D0, Eax);
BW_FUNC(void(Unit *), Order_TowerGuard, 0x00476F50, Eax);
BW_FUNC(void(Unit *), Order_TowerAttack, 0x00479150, Eax);
BW_FUNC(void(Unit *), Order_InitCreepGrowth, 0x004E96D0, Eax);
BW_FUNC(void(Unit *), Order_StoppingCreepGrowth, 0x004E95E0, Eax);
BW_FUNC(void(Unit *), Order_Stop, 0x0047BBA0, Eax);
BW_FUNC(void(Unit *), Order_StayInRange, 0x0047C4F0, Eax);
BW_FUNC(void(Unit *), Order_Scan, 0x00464E40, Eax);
BW_FUNC(void(Unit *), Order_ScannerSweep, 0x00463D30, Eax);
BW_FUNC(void(Unit *), Order_ReturnResource, 0x004690C0, Eax);
BW_FUNC(void(Unit *), Order_RescuePassive, 0x004A1EF0, Eax);
BW_FUNC(void(Unit *), Order_RightClick, 0x004F6EF0, Eax);
BW_FUNC(void(Unit *), Order_MoveToInfest, 0x004E98E0, Eax);
BW_FUNC(void(Unit *), Order_InfestMine4, 0x004EA290, Eax);
BW_FUNC(void(Unit *), Order_BuildProtoss2, 0x004E4F20, Eax);
BW_FUNC(void(Unit *), Order_PowerupIdle, 0x004F3E10, Eax);
BW_FUNC(void(Unit *), Order_PlaceMine, 0x00464FD0, Eax);
BW_FUNC(void(Unit *), Order_TransportIdle, 0x004E7300, Eax);
BW_FUNC(void(Unit *), Order_Patrol, 0x004780F0, Eax);
BW_FUNC(void(Unit *), Order_NukePaint, 0x00463610, Eax);
BW_FUNC(void(Unit *), Order_Pickup4, 0x004E7B70, Eax);
BW_FUNC(void(Unit *), Order_LiftingOff, 0x00463AC0, Eax);
BW_FUNC(void(Unit *), Order_InitPylon, 0x00493F70, Eax);
BW_FUNC(void(Unit *), Order_Move, 0x0047C950, Eax);
BW_FUNC(void(Unit *), Order_MoveToMinerals, 0x00469240, Eax);
BW_FUNC(void(Unit *), Order_WaitForMinerals, 0x00468F60, Eax);
BW_FUNC(void(Unit *), Order_WaitForGas, 0x00469000, Eax);
BW_FUNC(void(Unit *), Order_HarvestGas, 0x00469980, Eax);
BW_FUNC(void(Unit *), Order_MoveToHarvest, 0x00469500, Eax);
BW_FUNC(void(Unit *), Order_Follow, 0x0047C7B0, Eax);
BW_FUNC(void(Unit *), Order_Trap, 0x0047BF80, Eax);
BW_FUNC(void(Unit *), Order_HideTrap, 0x0047C0A0, Eax);
BW_FUNC(void(Unit *), Order_RevealTrap, 0x0047C1B0, Eax);
BW_FUNC(void(Unit *), Order_HarassMove, 0x00478EC0, Eax);
BW_FUNC(void(Unit *), Order_UnusedPowerup, 0x004F3EA0, Eax);
BW_FUNC(void(Unit *), Order_EnterTransport, 0x004E7CF0, Eax);
BW_FUNC(void(Unit *), Order_EnterNydus, 0x004EA3E0, Eax);
BW_FUNC(void(Unit *), Order_DroneStartBuild, 0x0045CF80, Eax);
BW_FUNC(void(Unit *), Order_DroneLand, 0x004E9AA0, Eax);
BW_FUNC(void(Unit *), Order_EnableDoodad, 0x0047BE80, Eax);
BW_FUNC(void(Unit *), Order_DisableDoodad, 0x0047BD60, Eax);
BW_FUNC(void(Unit *), Order_OpenDoor, 0x0047BCD0, Eax);
BW_FUNC(void(Unit *), Order_CloseDoor, 0x0047BC50, Eax);
BW_FUNC(void(Unit *), Order_Burrow, 0x004E9E60, Eax);
BW_FUNC(void(Unit *), Order_Burrowed, 0x004E9860, Eax);
BW_FUNC(void(Unit *), Order_Unburrow, 0x004EA670, Eax);
BW_FUNC(void(Unit *), Order_CtfCopInit, 0x004E4210, Eax);
BW_FUNC(void(Unit *), Order_ComputerReturn, 0x00478490, Eax);
BW_FUNC(void(Unit *), Order_CarrierIgnore2, 0x00466720, Eax);
BW_FUNC(void(Unit *), Order_CarrierStop, 0x00465910, Eax);
BW_FUNC(void(Unit *), Order_CarrierAttack, 0x00465950, Eax);
BW_FUNC(void(Unit *), Order_BeingInfested, 0x004EA4C0, Eax);
BW_FUNC(void(Unit *), Order_RechargeShieldsBattery, 0x00493990, Eax);
BW_FUNC(void(Unit *), Order_AiAttackMove, 0x00478DE0, Eax);
BW_FUNC(void(Unit *), Order_AttackFixedRange, 0x00477D00, Eax);
BW_FUNC(void(Unit *), Order_LiftOff, 0x004649B0, Esi);
BW_FUNC(void(Unit *), Order_TerranBuildSelf, 0x00467760, Eax);
BW_FUNC(void(Unit *), Order_ZergBuildSelf, 0x0045D500, Eax);
BW_FUNC(void(Unit *), Order_ConstructingBuilding, 0x00467A70, Eax);
BW_FUNC(void(Unit *), Order_Critter, 0x0047C3C0, Eax);
BW_FUNC(void(Unit *), Order_StopHarvest, 0x00468ED0, Eax);
BW_FUNC(void(Unit *), Order_UnitMorph, 0x0045DEA0, Eax);
BW_FUNC(void(Unit *), Order_NukeTrain, 0x004E6700, Eax);
BW_FUNC(void(Unit *), Order_CtfCop2, 0x004E3FB0, Eax);
BW_FUNC(void(Unit *), Order_TankMode, 0x00464AE0, Eax);
BW_FUNC(void(Unit *), Order_TurretAttack, 0x00477980, Eax);
BW_FUNC(void(Unit *), Order_TurretGuard, 0x004777F0, Eax);
BW_FUNC(void(Unit *), Order_ResetCollision1, 0x004671B0, Eax);
BW_FUNC(void(Unit *), Order_ResetCollision2, 0x0042E320, Eax);
BW_FUNC(void(Unit *), Order_Upgrade, 0x004546A0, Eax);
BW_FUNC(void(Unit *), Order_Birth, 0x0045DD60, Eax);
BW_FUNC(void(Unit *), Order_Heal, 0x00464180, Eax);
BW_FUNC(void(Unit *), Order_Tech, 0x004548B0, Eax);
BW_FUNC(void(Unit *), Order_Repair, 0x004673D0, Eax);
BW_FUNC(void(Unit *), Order_BuildNydusExit, 0x0045DC20, Ebx);
BW_FUNC(void(Unit *), Order_NukeTrack, 0x00479480, Ebx);
BW_FUNC(void(Unit *), Order_MedicHoldPosition, 0x00464050, Esi);
BW_FUNC(void(Unit *), Order_MineralHarvestInterrupted, 0x00468E80, Esi);
BW_FUNC(void(Unit *), Order_InitArbiter, 0x00493A80, Esi);
BW_FUNC(void(Unit *), Order_CompletingArchonSummon, 0x00493B10, Esi);
BW_FUNC(void(Unit *), Order_Guard, 0x00475B90, Esi);
BW_FUNC(void(Unit *), Order_CtfCopStarted, 0x004E41A0, Esi);
BW_FUNC(void(Unit *), Order_RechargeShieldsUnit, 0x00493DD0, Edi);
BW_FUNC(void(Unit *), Order_Interrupted, 0x00493920, Edi);
BW_FUNC(void(Unit *), Order_HealToIdle, 0x00463740, Edi);
BW_FUNC(void(Unit *), Order_Reaver, 0x004665D0, Edi);
BW_FUNC(void(Unit *), Order_Neutral, 0x004A1C20, Edi);
BW_FUNC(void(Unit *), Order_PickupBunker, 0x004E73B0, Edi);
BW_FUNC(void(Unit *), Order_PickupTransport, 0x004E75D0, Edi);
BW_FUNC(void(Unit *), Order_Carrier, 0x004666A0, Edi);
BW_FUNC(void(Unit *), Order_WarpIn, 0x004E4C70, Edi);
BW_FUNC(void(Unit *), Order_BuildProtoss1, 0x004E4D00, Edi);
BW_FUNC(void(Unit *), Order_AiPatrol, 0x004A1D80, Esi);
BW_FUNC(void(Unit *), Order_AttackMove, 0x00479040, Esi);
BW_FUNC(void(Unit *), Order_BuildTerran, 0x00467FD0, Stack);
BW_FUNC(void(Unit *), Order_HealMove, 0x004637B0, Stack);
BW_FUNC(void(Unit *), Order_ReaverStop, 0x004654B0, Stack);
BW_FUNC(void(Unit *), Order_DefensiveMatrix, 0x004550A0, Stack);
BW_FUNC(void(Unit *), Order_BuildingMorph, 0x0045D0D0, Stack);
BW_FUNC(void(Unit *), Order_PlaceAddon, 0x004E6880, Stack);
BW_FUNC(void(Unit *), Order_BunkerGuard, 0x004790A0, Eax);
BW_FUNC(void(Unit *), Order_BuildAddon, 0x004E6790, Eax);
BW_FUNC(void(Unit *), Order_TrainFighter, 0x00466790, Eax);
BW_FUNC(void(Unit *), Order_ShieldBattery, 0x004932D0, Edi);
BW_FUNC(void(Unit *), Order_SpawningLarva, 0x004EA780, Esi);
BW_FUNC(void(Unit *), Order_SpreadCreep, 0x004EA880, Eax);
BW_FUNC(void(Unit *), Order_Cloak, 0x00491790, Eax);
BW_FUNC(void(Unit *), Order_Decloak, 0x004633E0, Eax);
BW_FUNC(void(Unit *), Order_CloakNearbyUnits, 0x00491C20, Edi);
BW_FUNC(bool(const Unit *unit, int, int, int), CheckFiringAngle, 0x00475BE0, Esi, Ecx, Eax, Stack);
BW_FUNC(bool(Unit *), IsMovingToMoveWaypoint, 0x00402A90, Eax);
BW_FUNC(uint32_t(int, int), CalculateBaseStrength, 0x00431270, Stack, Eax);
BW_FUNC(uint32_t(int, int), FinetuneBaseStrength, 0x00431150, Eax, Ecx);
BW_FUNC(uint32_t(Unit *, int), CalculateSpeedChange, 0x0047B5F0, Edx, Eax);
BW_FUNC(void(Flingy *, int), SetDirection, 0x00495F20, Eax, Ebx);
BW_FUNC(bool(Unit *), ShouldStopOrderedSpell, 0x00492140, Edi);
BW_FUNC(void(Unit *, int), Iscript_AttackWith, 0x00479D60, Eax, Stack);
BW_FUNC(void(int, Unit *), Iscript_UseWeapon, 0x00479C30, Stack, Esi);
BW_FUNC(void(Unit *, uint32_t *, uint32_t *), GetClosestPointOfTarget, 0x004762C0, Stack, Stack, Stack);
BW_FUNC(void(int, Flingy *), SetMoveTargetToNearbyPoint, 0x004011A0, Eax, Edx);
BW_FUNC(void(Unit *, int), FireWeapon, 0x00479D40, Eax, Ebx);
BW_FUNC(void(Image *img), SetOffsetToParentsSpecialOverlay, 0x004D5A00, Ecx);
BW_FUNC(uint32_t(int, int, int, int), GetPsiPlacementState, 0x00473920, Stack, Stack, Esi, Eax);
BW_FUNC(uint32_t(int, int, int, int), GetGasBuildingPlacementState, 0x00473DB0, Stack, Stack, Stack, Stack);
BW_FUNC(uint32_t(int, int, int, int, int, int), UpdateNydusPlacementState, 0x00473150, Eax, Stack, Stack, Stack, Stack, Stack);
BW_FUNC(uint32_t(int, int, int, int, int, int, int), UpdateCreepBuildingPlacementState, 0x00473010, Eax, Stack, Stack, Stack, Stack, Stack, Stack);
BW_FUNC(uint32_t(int, int, int, int, int, int, int), UpdateBuildingPlacementState_MapTileFlags, 0x00473A10, Stack, Stack, Stack, Stack, Stack, Stack, Eax);
BW_FUNC(uint32_t(Unit *, int, int, int, int, int, int, int, int, int), UpdateBuildingPlacementState_Units, 0x00473720, Stack, Stack, Eax, Stack, Stack, Stack, Stack, Stack, Stack, Stack);
BW_FUNC(void(Unit *, Unit *), MoveTowards, 0x004EB900, Ecx, Eax);
BW_FUNC(void(Unit *, Unit *), MoveToCollide, 0x00495400, Edi, Eax);
BW_FUNC(void(Unit *, Unit *), InheritAi, 0x00435770, Ecx, Eax);
BW_FUNC(void(Unit *, int), MutateBuilding, 0x0045D890, Eax, Stack);
BW_FUNC(void(int), ReduceBuildResources, 0x0042CE40, Eax);
BW_FUNC(int(int, int, int), CheckSupplyForBuilding, 0x0042CF70, Stack, Stack, Stack);
BW_FUNC(Unit *(int, Unit *), BeginGasBuilding, 0x004678A0, Stack, Eax);
BW_FUNC(void(Unit *), StartZergBuilding, 0x0045D2E0, Eax);
BW_FUNC(void(Unit *, int), BuildErrorMessage, 0x0048F6C0, Eax, Stack);
BW_FUNC(void(Unit *, Unit *), BeginHarvest, 0x00468C70, Eax, Edi);
BW_FUNC(void(Unit *), AddResetHarvestCollisionOrder, 0x00468AA0, Eax);
BW_FUNC(bool(Flingy *), IsFacingMoveTarget, 0x00402BE0, Esi);
BW_FUNC(void(Unit *, Unit *), FinishedMining, 0x00468E40, Ecx, Eax);
BW_FUNC(bool(Unit *), Ai_CanMineExtra, 0x00447A70, Eax);
BW_FUNC(void(int, int, Unit *, int), CreateResourceOverlay, 0x004F3AF0, Stack, Edx, Edi, Esi);
BW_FUNC(void(Unit *), UpdateMineralAmountAnimation, 0x00468830, Ecx);
BW_FUNC(void(Unit *, Unit *), MergeArchonStats, 0x00493180, Eax, Ecx);
BW_FUNC(Unit *(Unit *), SpiderMine_FindTarget, 0x00441270, Esi);
BW_FUNC(void(Unit *), Burrow_Generic, 0x004E9A30, Eax);
BW_FUNC(void(Unit *), InstantCloak, 0x0049B1E0, Edi);
BW_FUNC(void(Unit *), Unburrow_Generic, 0x004E99D0, Eax);
BW_FUNC(void(Unit *), DetachAddon, 0x00464930, Eax);
BW_FUNC(void(Unit *), CancelTech, 0x00453DD0, Esi);
BW_FUNC(void(Unit *), CancelUpgrade, 0x00454220, Esi);
BW_FUNC(void(), EndAddonPlacement, 0x0048E6E0);
BW_FUNC(void(int, int, Sprite *), ReplaceSprite, 0x00499BB0, Stack, Stack, Eax);
BW_FUNC(bool(Unit *, int, int), IsGoodLarvaPosition, 0x004E93E0, Ebx, Stack, Stack);
BW_FUNC(void(Unit *, uint32_t *, uint32_t *), GetDefaultLarvaPosition, 0x004E94B0, Stack, Stack, Stack);
BW_FUNC(bool(Unit *), Ai_UnitSpecific, 0x004A2450, Eax);
BW_FUNC(void(Unit *), Ai_WorkerAi, 0x00435210, Stack);
BW_FUNC(bool(Unit *), Ai_TryProgressSpendingQueue, 0x004361A0, Ecx);
BW_FUNC(void(Unit *), Ai_Military, 0x0043D910, Eax);
BW_FUNC(bool(Unit *, int), Ai_IsInAttack, 0x00436E70, Eax, Stack);
BW_FUNC(Unit *(Unit *), Ai_FindNearestRepairer, 0x00440770, Eax);
BW_FUNC(void(Unit *), Ai_SiegeTank, 0x004A12C0, Eax);
BW_FUNC(void(Unit *), Ai_Burrower, 0x004A1340, Eax);
BW_FUNC(bool(Unit *), Ai_IsMilitaryAtRegionWithoutState0, 0x00436AE0, Eax);
BW_FUNC(void(Unit *, Unit *), LoadFighter, 0x00466270, Ecx, Eax);
BW_FUNC(void(int), Command_StartGame, 0x00472060, Stack);
BW_FUNC(void(), DrawDownloadStatuses, 0x00450210);
BW_FUNC(void(int, const void *), Command_NewNetPlayer, 0x004713E0, Stack, Edx);
BW_FUNC(void(int, const void *), Command_ChangeGameSlot, 0x00471460, Eax, Ecx);
BW_FUNC(void(const void *, int), Command_ChangeRace, 0x00471300, Stack, Stack);
BW_FUNC(void(const void *, int), Command_TeamGameTeam, 0x00471750, Ecx, Stack);
BW_FUNC(void(const void *, int), Command_UmsTeam, 0x00471670, Stack, Stack);
BW_FUNC(void(const void *, int), Command_MeleeTeam, 0x00471570, Ebx, Stack);
BW_FUNC(void(const void *, int), Command_SwapPlayers, 0x00471860, Ebx, Stack);
BW_FUNC(void(const void *, int), Command_SavedData, 0x00472110, Edx, Eax);
BW_FUNC(void(), MakeGamePublic, 0x004C46E0);
BW_FUNC(void(Control *), Ctrl_LeftUp, 0x00418640, Esi);
BW_FUNC(void(int, int, int, void *), RemoveCreepAtUnit, 0x00414560, Ecx, Eax, Edx, Stack);
BW_FUNC(void(Unit *, int), GiveSprite, 0x0049E4E0, Ecx, Edx);
BW_FUNC(void(Unit *), RedrawGasBuildingPlacement, 0x0048E1E0, Eax);
BW_FUNC(Unit *(Unit *), PickReachableTarget, 0x00442FC0, Esi);
BW_FUNC(bool(Unit *), CanSeeTarget, 0x004E5DB0, Esi);
BW_FUNC(void(void *, int, void *, void *), ReadFile_Overlapped, 0x004D2AA0, Eax, Edx, Ecx, Edi);
BW_FUNC(void *(char *), OpenGrpFile, 0x004D2930, Edi);
BW_FUNC(void(void *, int), FileError, 0x004D2880, Ecx, Ebx);
BW_FUNC(void(int, const char *), ErrorMessageBox, 0x004212C0, Ebx, Stack);
BW_FUNC(void *(const char *, int, int, const char *, int, int, uint32_t *), ReadMpqFile, 0x004D2D10, Stack, Stack, Stack, Stack, Stack, Ecx, Eax);
BW_FUNC(Unit **(int, int), GetClickableUnits, 0x00431030, Stack, Eax);
BW_FUNC(bool(Unit *, int, int), IsClickablePixel, 0x00402A00, Stack, Edi, Ebx);
BW_FUNC(void(int, int), KickPlayer, 0x00470480, Esi, Eax);
BW_FUNC(void(int, int, int, int), InitNetPlayer, 0x00470D10, Stack, Stack, Stack, Stack);
BW_FUNC(void(int), InitPlayerStructs, 0x004A8D40, Esi);
BW_FUNC(void(Player *), InitPlayerSlot, 0x00470F90, Edi);
BW_FUNC(void(int), InitNetPlayerInfo, 0x00470EF0, Eax);
BW_FUNC(uint32_t(), CountFreeSlots, 0x004A8CD0);
BW_FUNC(void(int), SetFreeSlots, 0x004C4160, Stack);
BW_FUNC(void(int), SendInfoRequestCommand, 0x00470250, Eax);
BW_FUNC(void(MapDl *, int), InitMapDownload, 0x00472AB0, Stack, Stack);
BW_FUNC(int(), GetFirstFreeHumanPlayerId, 0x004A99C0);
BW_FUNC(int(), GetFreeSlotFromEmptiestTeam, 0x0045ADE0);
BW_FUNC(int(), GetTeamGameTeamSize, 0x00485710);
BW_FUNC(void(), InitFlingies, 0x00496520);
BW_FUNC(void(), InitAi, 0x004A1EA0);
BW_FUNC(void(), InitText, 0x0048CE90);
BW_FUNC(void(), InitTerrain, 0x004BD6F0);
BW_FUNC(void(), InitSprites, 0x00499900);
BW_FUNC(void(), InitImages, 0x004D6930);
BW_FUNC(void(), InitColorCycling, 0x004CBED0);
BW_FUNC(void(void *, void *), UpdateColorPaletteIndices, 0x0041E450, Stack, Ebx);
BW_FUNC(void(), InitTransparency, 0x004C99C0);
BW_FUNC(void(), InitScoreSupply, 0x00488F90);
BW_FUNC(void(), LoadMiscDat, 0x004CCC80);
BW_FUNC(void(), InitSpriteVisionSync, 0x00497110);
BW_FUNC(void(), InitScreenPositions, 0x004BD3F0);
BW_FUNC(void(), InitTerrainAi, 0x004A13B0);
BW_FUNC(void(), CloseBnet, 0x004DCC50);
BW_FUNC(void(const char *, int, const char *, int), BwError, 0x004BB300, Ecx, Eax, Edx, Stack);
BW_FUNC(uint32_t(), LoadChk, 0x004BF520);
BW_FUNC(void(), CreateTeamGameStartingUnits, 0x0049D8E0);
BW_FUNC(void(), CreateStartingUnits, 0x0049DA40);
BW_FUNC(void(), InitUnitSystem, 0x0049F380);
BW_FUNC(void(), InitPylonSystem, 0x00493360);
BW_FUNC(void(void *, const char *), LoadDat, 0x004D2E80, Eax, Stack);
BW_FUNC(void(const char *, char *, int), GetReplayPath, 0x004DEF80, Stack, Eax, Esi);
BW_FUNC(bool(ReplayData *, File *), WriteReplayData, 0x004CE1C0, Esi, Edi);
BW_FUNC(void *(uint32_t *, const char *), ReadChk, 0x004CC6E0, Stack, Eax);
BW_FUNC(void(Unit *), GiveAi, 0x00463040, Eax);
BW_FUNC(bool(Unit *), Interceptor_Attack, 0x00465810, Eax);
BW_FUNC(void(Unit *, int, uint32_t), Interceptor_Move, 0x00465D30, Eax, Ecx, Stack);
BW_FUNC(bool(Unit *), AttackRecentAttacker, 0x004770E0, Eax);
BW_FUNC(void(Unit *), NeutralizeUnit, 0x0047CB90, Esi);
BW_FUNC(void(Sprite *), RemoveCloakDrawfuncs, 0x00497E80, Eax);
BW_FUNC(void(Unit *), FlyingBuilding_SwitchedState, 0x0046A5A0, Eax);
BW_FUNC(void(Unit *), FlyingBuilding_LiftIfStillBlocked, 0x00463640, Eax);
BW_FUNC(Unit *(Unit *), FindClaimableAddon, 0x004404A0, Esi);
BW_FUNC(void(Unit *, Unit *), AttachAddon, 0x00463D50, Edi, Eax);
BW_FUNC(void(Unit *), ShowLandingError, 0x0048F5A0, Eax);
BW_FUNC(bool(Unit *, Unit *), Ai_IsUnreachable, 0x00476C50, Esi, Eax);
BW_FUNC(void(Unit *, Unit *), MoveForMeleeRange, 0x00477F10, Stack, Eax);
BW_FUNC(Unit *(Unit *, int, int), BeginTrain, 0x00468200, Esi, Edi, Stack);
BW_FUNC(int(Unit *), GetBuildHpGain, 0x00402C40, Eax);
BW_FUNC(int(Unit *, int, int), ProgressBuild, 0x004679A0, Eax, Edx, Stack);
BW_FUNC(void(Unit *, Unit *), RallyUnit, 0x00466F50, Ecx, Eax);
BW_FUNC(void(int, int, int, int), AiScript_StartTown, 0x00434220, Stack, Stack, Stack, Eax);
BW_FUNC(void(), DeleteMapSounds, 0x004BBE40);

BW_FUNC(int(Unit *, x32, y32, uint32_t, uint32_t), IsOnResourceArea, 0x00445820, Esi, Stack, Edi, Stack, Stack);
BW_FUNC(int(Unit *), FindMatchingResourceArea, 0x00445930, Esi);
BW_FUNC(int(Unit *, uint32_t, uint32_t), HighestResourceConcentration, 0x00445B00, Stack, Stack, Stack);
BW_FUNC(Unit *(const uint8_t *, Unit *, x32, y32), FindNearestMineral, 0x004447D0, Eax, Stack, Stack, Stack);
FUNC_LIST_END(bw_1161)

FUNC_LIST_START(storm, storm_1161)
BW_FUNC(void *(uint32_t, const char *, uint32_t, uint32_t), SMemAlloc, 0x15020ED0, Stack, Stack, Stack, Stack);
BW_FUNC(void(void *, const char *, uint32_t, uint32_t), SMemFree, 0x150205D0, Stack, Stack, Stack, Stack);
BW_FUNC(void(void *), SFileCloseArchive, 0x15014A80, Stack);
BW_FUNC(void(void *), SFileCloseFile, 0x150152B0, Stack);
BW_FUNC(uint32_t(void *, void *, void *, void *, void *), SNetInitializeProvider, 0x1503E560, Stack, Stack, Stack, Stack, Stack);
BW_FUNC(uint32_t(int, char *, int), SNetGetPlayerName, 0x150370C0, Stack, Stack, Stack);
BW_FUNC(uint32_t(void *, uint32_t *), SFileGetFileSize, 0x15013F50, Stack, Stack);
BW_FUNC(uint32_t(int, const void *, int, int, void *, int, uint32_t *, uint32_t *, int), SBmpDecodeImage, 0x15024D50, Stack, Stack, Stack, Stack, Stack, Stack, Stack, Stack, Stack);
FUNC_LIST_END(storm_1161)

#undef BW_FUNC
#undef FUNC_LIST_START
#undef FUNC_LIST_END
